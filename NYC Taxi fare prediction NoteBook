{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "85e2b15d",
   "metadata": {
    "papermill": {
     "duration": 0.016294,
     "end_time": "2025-06-16T10:22:31.637904",
     "exception": false,
     "start_time": "2025-06-16T10:22:31.621610",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# NYC Taxi Fare Prediction – Regression & Classification Approach\n",
    "\n",
    "This notebook explores NYC Yellow Taxi data for January 2025 to build two types of predictive models:\n",
    "- A **regression model** to estimate the exact total fare amount.\n",
    "- A **classification model** to categorize trips into fare ranges (low, medium, high).\n",
    "\n",
    "By comparing both approaches, we aim to understand which strategy yields more reliable, interpretable, and practical results.\n",
    "\n",
    "---\n",
    "\n",
    "## Table of Contents\n",
    "\n",
    "1. [Introduction](#1-introduction)\n",
    "2. [Data Loading](#2-data-loading)\n",
    "3. [Data Cleaning & Initial Exploration](#3-data-cleaning--initial-exploration)\n",
    "4. [Data Preparation & Feature Engineering](#4-data-preparation--feature-engineering)\n",
    "5. [Benchmark Model – Regression (Decision Tree)](#5-benchmark-model--regression-decision-tree)\n",
    "6. [Advanced Feature Engineering – Time, Borough & Weather](#6-advanced-feature-engineering--time-borough--weather)\n",
    "7. [Regression Modeling with Tree-Based Models](#7-regression-modeling-with-tree-based-models)\n",
    "8. [Fare Range Classification (XGBoost)](#8-fare-range-classification-xgboost)\n",
    "9. [Model Comparison & Conclusion](#9-model-comparison--conclusion)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "21094966",
   "metadata": {
    "papermill": {
     "duration": 0.015358,
     "end_time": "2025-06-16T10:22:31.667752",
     "exception": false,
     "start_time": "2025-06-16T10:22:31.652394",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 1. Introduction\n",
    "\n",
    "New York City’s yellow taxi trip data provides a rich view into urban transportation patterns. Each trip record includes pickup and drop-off times, locations, passenger count, payment type, and the total fare amount paid by the passenger.\n",
    "\n",
    "In this notebook, we aim to predict how much a taxi driver is expected to earn for a given ride based on the time, location, and weather conditions. We start with a **regression approach** to estimate the total fare (`total_amount`) directly. However, due to high variability in fares and common issues like tip fluctuations, disputed payments, and short trips, regression may not yield the most robust results.\n",
    "\n",
    "To improve interpretability and model stability, we later reframe the problem as a **classification task**, where we categorize fares into three meaningful classes:\n",
    "- `low`: short, cheap rides\n",
    "- `medium`: standard intra-city trips\n",
    "- `high`: longer or airport-related rides\n",
    "\n",
    "This notebook reflects the process of experimentation, feature engineering, and modeling decisions made along the way. The final goal is to determine which approach is more effective and useful in practice both technically and contextually.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "479288b1",
   "metadata": {
    "papermill": {
     "duration": 0.013836,
     "end_time": "2025-06-16T10:22:31.695944",
     "exception": false,
     "start_time": "2025-06-16T10:22:31.682108",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. Data Loading\n",
    "\n",
    "We begin by loading the NYC Yellow Taxi trip data for **January 2025**. The dataset contains individual taxi trip records including timestamps, fare details, locations, and other trip-related attributes.\n",
    "\n",
    "We’ll start by reading the dataset in Parquet format and displaying its shape and a preview of the first few rows.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "80974c91",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:31.725783Z",
     "iopub.status.busy": "2025-06-16T10:22:31.725463Z",
     "iopub.status.idle": "2025-06-16T10:22:34.848683Z",
     "shell.execute_reply": "2025-06-16T10:22:34.847890Z"
    },
    "papermill": {
     "duration": 3.140104,
     "end_time": "2025-06-16T10:22:34.850356",
     "exception": false,
     "start_time": "2025-06-16T10:22:31.710252",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "# Load January 2025 NYC Yellow Taxi trip data from Parquet file\n",
    "taxi_jan_2025 = pd.read_parquet('/kaggle/input/yellow-taxi-trip-data')\n",
    "\n",
    "# Combine into one DataFrame (more useful if extending later with other months)\n",
    "taxi_data = pd.concat([taxi_jan_2025], ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fc297edb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:34.880306Z",
     "iopub.status.busy": "2025-06-16T10:22:34.879861Z",
     "iopub.status.idle": "2025-06-16T10:22:34.916594Z",
     "shell.execute_reply": "2025-06-16T10:22:34.915663Z"
    },
    "papermill": {
     "duration": 0.05324,
     "end_time": "2025-06-16T10:22:34.917888",
     "exception": false,
     "start_time": "2025-06-16T10:22:34.864648",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset shape: (3475226, 20)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VendorID</th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>congestion_surcharge</th>\n",
       "      <th>Airport_fee</th>\n",
       "      <th>cbd_congestion_fee</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01 00:18:38</td>\n",
       "      <td>2025-01-01 00:26:59</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>N</td>\n",
       "      <td>229</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>18.00</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01 00:32:40</td>\n",
       "      <td>2025-01-01 00:35:13</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.0</td>\n",
       "      <td>N</td>\n",
       "      <td>236</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.12</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01 00:44:04</td>\n",
       "      <td>2025-01-01 00:46:01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>N</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>1</td>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>12.10</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>2025-01-01 00:14:27</td>\n",
       "      <td>2025-01-01 00:20:01</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.52</td>\n",
       "      <td>1.0</td>\n",
       "      <td>N</td>\n",
       "      <td>244</td>\n",
       "      <td>244</td>\n",
       "      <td>2</td>\n",
       "      <td>7.2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.70</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2025-01-01 00:21:34</td>\n",
       "      <td>2025-01-01 00:25:06</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.66</td>\n",
       "      <td>1.0</td>\n",
       "      <td>N</td>\n",
       "      <td>244</td>\n",
       "      <td>116</td>\n",
       "      <td>2</td>\n",
       "      <td>5.8</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8.30</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   VendorID tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
       "0         1  2025-01-01 00:18:38   2025-01-01 00:26:59              1.0   \n",
       "1         1  2025-01-01 00:32:40   2025-01-01 00:35:13              1.0   \n",
       "2         1  2025-01-01 00:44:04   2025-01-01 00:46:01              1.0   \n",
       "3         2  2025-01-01 00:14:27   2025-01-01 00:20:01              3.0   \n",
       "4         2  2025-01-01 00:21:34   2025-01-01 00:25:06              3.0   \n",
       "\n",
       "   trip_distance  RatecodeID store_and_fwd_flag  PULocationID  DOLocationID  \\\n",
       "0           1.60         1.0                  N           229           237   \n",
       "1           0.50         1.0                  N           236           237   \n",
       "2           0.60         1.0                  N           141           141   \n",
       "3           0.52         1.0                  N           244           244   \n",
       "4           0.66         1.0                  N           244           116   \n",
       "\n",
       "   payment_type  fare_amount  extra  mta_tax  tip_amount  tolls_amount  \\\n",
       "0             1         10.0    3.5      0.5        3.00           0.0   \n",
       "1             1          5.1    3.5      0.5        2.02           0.0   \n",
       "2             1          5.1    3.5      0.5        2.00           0.0   \n",
       "3             2          7.2    1.0      0.5        0.00           0.0   \n",
       "4             2          5.8    1.0      0.5        0.00           0.0   \n",
       "\n",
       "   improvement_surcharge  total_amount  congestion_surcharge  Airport_fee  \\\n",
       "0                    1.0         18.00                   2.5          0.0   \n",
       "1                    1.0         12.12                   2.5          0.0   \n",
       "2                    1.0         12.10                   2.5          0.0   \n",
       "3                    1.0          9.70                   0.0          0.0   \n",
       "4                    1.0          8.30                   0.0          0.0   \n",
       "\n",
       "   cbd_congestion_fee  \n",
       "0                 0.0  \n",
       "1                 0.0  \n",
       "2                 0.0  \n",
       "3                 0.0  \n",
       "4                 0.0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display dataset shape and sample rows\n",
    "print(f\"Dataset shape: {taxi_data.shape}\")\n",
    "taxi_data.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2dab97c9",
   "metadata": {
    "papermill": {
     "duration": 0.014348,
     "end_time": "2025-06-16T10:22:34.947337",
     "exception": false,
     "start_time": "2025-06-16T10:22:34.932989",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3. Data Cleaning & Initial Exploration\n",
    "\n",
    "Before building any predictive models, we begin by exploring the dataset and addressing potential issues that may affect data quality or model performance.\n",
    "\n",
    "### Key steps:\n",
    "- Select only the most relevant columns for fare prediction.\n",
    "- Visualize the distribution of numerical and categorical features.\n",
    "- Identify and remove invalid or extreme records:\n",
    "  - Trips with **negative or zero `total_amount`**, which likely indicate disputes or canceled rides.\n",
    "  - Trips with **unusually high fares (above $200)**, which are rare and can distort model learning.\n",
    "\n",
    "This step helps ensure our dataset is clean, consistent, and suitable for training accurate models.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6e9bcacf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:34.978922Z",
     "iopub.status.busy": "2025-06-16T10:22:34.978606Z",
     "iopub.status.idle": "2025-06-16T10:22:34.986029Z",
     "shell.execute_reply": "2025-06-16T10:22:34.985168Z"
    },
    "papermill": {
     "duration": 0.02492,
     "end_time": "2025-06-16T10:22:34.987550",
     "exception": false,
     "start_time": "2025-06-16T10:22:34.962630",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['VendorID', 'tpep_pickup_datetime', 'tpep_dropoff_datetime',\n",
       "       'passenger_count', 'trip_distance', 'RatecodeID', 'store_and_fwd_flag',\n",
       "       'PULocationID', 'DOLocationID', 'payment_type', 'fare_amount', 'extra',\n",
       "       'mta_tax', 'tip_amount', 'tolls_amount', 'improvement_surcharge',\n",
       "       'total_amount', 'congestion_surcharge', 'Airport_fee',\n",
       "       'cbd_congestion_fee'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "fcde8425",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:35.018641Z",
     "iopub.status.busy": "2025-06-16T10:22:35.018304Z",
     "iopub.status.idle": "2025-06-16T10:22:35.149635Z",
     "shell.execute_reply": "2025-06-16T10:22:35.148436Z"
    },
    "papermill": {
     "duration": 0.149751,
     "end_time": "2025-06-16T10:22:35.152150",
     "exception": false,
     "start_time": "2025-06-16T10:22:35.002399",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Select relevant features for modeling\n",
    "taxi_data = taxi_data[['tpep_pickup_datetime', 'tpep_dropoff_datetime',\n",
    "       'passenger_count', 'trip_distance', 'RatecodeID','PULocationID',\n",
    "       'DOLocationID', 'payment_type',  'total_amount']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e84afbe8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:35.261538Z",
     "iopub.status.busy": "2025-06-16T10:22:35.260933Z",
     "iopub.status.idle": "2025-06-16T10:22:35.273059Z",
     "shell.execute_reply": "2025-06-16T10:22:35.272224Z"
    },
    "papermill": {
     "duration": 0.030185,
     "end_time": "2025-06-16T10:22:35.274720",
     "exception": false,
     "start_time": "2025-06-16T10:22:35.244535",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2025-01-01 00:18:38</td>\n",
       "      <td>2025-01-01 00:26:59</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>229</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2025-01-01 00:32:40</td>\n",
       "      <td>2025-01-01 00:35:13</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.0</td>\n",
       "      <td>236</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>12.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2025-01-01 00:44:04</td>\n",
       "      <td>2025-01-01 00:46:01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>1</td>\n",
       "      <td>12.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2025-01-01 00:14:27</td>\n",
       "      <td>2025-01-01 00:20:01</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.52</td>\n",
       "      <td>1.0</td>\n",
       "      <td>244</td>\n",
       "      <td>244</td>\n",
       "      <td>2</td>\n",
       "      <td>9.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2025-01-01 00:21:34</td>\n",
       "      <td>2025-01-01 00:25:06</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.66</td>\n",
       "      <td>1.0</td>\n",
       "      <td>244</td>\n",
       "      <td>116</td>\n",
       "      <td>2</td>\n",
       "      <td>8.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  trip_distance  \\\n",
       "0  2025-01-01 00:18:38   2025-01-01 00:26:59              1.0           1.60   \n",
       "1  2025-01-01 00:32:40   2025-01-01 00:35:13              1.0           0.50   \n",
       "2  2025-01-01 00:44:04   2025-01-01 00:46:01              1.0           0.60   \n",
       "3  2025-01-01 00:14:27   2025-01-01 00:20:01              3.0           0.52   \n",
       "4  2025-01-01 00:21:34   2025-01-01 00:25:06              3.0           0.66   \n",
       "\n",
       "   RatecodeID  PULocationID  DOLocationID  payment_type  total_amount  \n",
       "0         1.0           229           237             1         18.00  \n",
       "1         1.0           236           237             1         12.12  \n",
       "2         1.0           141           141             1         12.10  \n",
       "3         1.0           244           244             2          9.70  \n",
       "4         1.0           244           116             2          8.30  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "90a52750",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:35.308041Z",
     "iopub.status.busy": "2025-06-16T10:22:35.307380Z",
     "iopub.status.idle": "2025-06-16T10:22:37.997682Z",
     "shell.execute_reply": "2025-06-16T10:22:37.996771Z"
    },
    "papermill": {
     "duration": 2.707854,
     "end_time": "2025-06-16T10:22:37.999195",
     "exception": false,
     "start_time": "2025-06-16T10:22:35.291341",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<Axes: title={'center': 'passenger_count'}>,\n",
       "        <Axes: title={'center': 'trip_distance'}>,\n",
       "        <Axes: title={'center': 'RatecodeID'}>],\n",
       "       [<Axes: title={'center': 'PULocationID'}>,\n",
       "        <Axes: title={'center': 'DOLocationID'}>,\n",
       "        <Axes: title={'center': 'payment_type'}>],\n",
       "       [<Axes: title={'center': 'total_amount'}>, <Axes: >, <Axes: >]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x1000 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize numeric distributions\n",
    "taxi_data.select_dtypes(include='number').hist(figsize=(20,10), bins=60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "14091bec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:38.034382Z",
     "iopub.status.busy": "2025-06-16T10:22:38.033640Z",
     "iopub.status.idle": "2025-06-16T10:22:38.083061Z",
     "shell.execute_reply": "2025-06-16T10:22:38.082130Z"
    },
    "papermill": {
     "duration": 0.068366,
     "end_time": "2025-06-16T10:22:38.084520",
     "exception": false,
     "start_time": "2025-06-16T10:22:38.016154",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RatecodeID\n",
       "1.0     2756472\n",
       "2.0       94420\n",
       "99.0      41963\n",
       "5.0       26501\n",
       "3.0        8622\n",
       "4.0        7092\n",
       "6.0           7\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check value distribution for RatecodeID\n",
    "taxi_data['RatecodeID'].value_counts()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "09c0c1f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:38.119391Z",
     "iopub.status.busy": "2025-06-16T10:22:38.118657Z",
     "iopub.status.idle": "2025-06-16T10:22:49.369808Z",
     "shell.execute_reply": "2025-06-16T10:22:49.368891Z"
    },
    "papermill": {
     "duration": 11.269901,
     "end_time": "2025-06-16T10:22:49.371285",
     "exception": false,
     "start_time": "2025-06-16T10:22:38.101384",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='index', ylabel='total_amount'>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize total amount to check for extreme outliers\n",
    "taxi_data.reset_index().plot(kind='scatter', y='total_amount', x='index', figsize=(10,5))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8297da2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:22:49.407606Z",
     "iopub.status.busy": "2025-06-16T10:22:49.406817Z",
     "iopub.status.idle": "2025-06-16T10:23:00.737170Z",
     "shell.execute_reply": "2025-06-16T10:23:00.736355Z"
    },
    "papermill": {
     "duration": 11.351509,
     "end_time": "2025-06-16T10:23:00.739701",
     "exception": false,
     "start_time": "2025-06-16T10:22:49.388192",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='index', ylabel='total_amount'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Check fare distribution before filtering\n",
    "taxi_data[taxi_data['total_amount']<1000].reset_index().plot(kind='scatter', y='total_amount', x='index', figsize=(10,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2007b141",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:00.791453Z",
     "iopub.status.busy": "2025-06-16T10:23:00.791006Z",
     "iopub.status.idle": "2025-06-16T10:23:01.216808Z",
     "shell.execute_reply": "2025-06-16T10:23:01.215873Z"
    },
    "papermill": {
     "duration": 0.448591,
     "end_time": "2025-06-16T10:23:01.218587",
     "exception": false,
     "start_time": "2025-06-16T10:23:00.769996",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(63037, 9)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='index', ylabel='total_amount'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Count and investigate negative fares\n",
    "print(taxi_data[taxi_data['total_amount']<0].shape)\n",
    "taxi_data[taxi_data['total_amount']<0].reset_index().plot(kind='scatter', y='total_amount', x='index', figsize=(10,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "92dfbad5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:01.266003Z",
     "iopub.status.busy": "2025-06-16T10:23:01.265696Z",
     "iopub.status.idle": "2025-06-16T10:23:01.293617Z",
     "shell.execute_reply": "2025-06-16T10:23:01.292617Z"
    },
    "papermill": {
     "duration": 0.049694,
     "end_time": "2025-06-16T10:23:01.295060",
     "exception": false,
     "start_time": "2025-06-16T10:23:01.245366",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2025-01-01 00:01:41</td>\n",
       "      <td>2025-01-01 00:07:14</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.71</td>\n",
       "      <td>1.0</td>\n",
       "      <td>79</td>\n",
       "      <td>107</td>\n",
       "      <td>2</td>\n",
       "      <td>-8.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2025-01-01 00:55:54</td>\n",
       "      <td>2025-01-01 01:00:38</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.69</td>\n",
       "      <td>1.0</td>\n",
       "      <td>137</td>\n",
       "      <td>233</td>\n",
       "      <td>4</td>\n",
       "      <td>-11.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>2025-01-01 00:56:12</td>\n",
       "      <td>2025-01-01 01:15:00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.97</td>\n",
       "      <td>1.0</td>\n",
       "      <td>161</td>\n",
       "      <td>170</td>\n",
       "      <td>4</td>\n",
       "      <td>-21.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>2025-01-01 00:55:53</td>\n",
       "      <td>2025-01-01 01:06:49</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.42</td>\n",
       "      <td>1.0</td>\n",
       "      <td>79</td>\n",
       "      <td>45</td>\n",
       "      <td>2</td>\n",
       "      <td>-17.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>2025-01-01 00:29:35</td>\n",
       "      <td>2025-01-01 00:36:02</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>79</td>\n",
       "      <td>148</td>\n",
       "      <td>4</td>\n",
       "      <td>-12.20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
       "17   2025-01-01 00:01:41   2025-01-01 00:07:14              1.0   \n",
       "22   2025-01-01 00:55:54   2025-01-01 01:00:38              1.0   \n",
       "104  2025-01-01 00:56:12   2025-01-01 01:15:00              1.0   \n",
       "149  2025-01-01 00:55:53   2025-01-01 01:06:49              1.0   \n",
       "202  2025-01-01 00:29:35   2025-01-01 00:36:02              1.0   \n",
       "\n",
       "     trip_distance  RatecodeID  PULocationID  DOLocationID  payment_type  \\\n",
       "17            0.71         1.0            79           107             2   \n",
       "22            0.69         1.0           137           233             4   \n",
       "104           0.97         1.0           161           170             4   \n",
       "149           1.42         1.0            79            45             2   \n",
       "202           0.60         1.0            79           148             4   \n",
       "\n",
       "     total_amount  \n",
       "17          -8.54  \n",
       "22         -11.50  \n",
       "104        -21.30  \n",
       "149        -17.10  \n",
       "202        -12.20  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data[taxi_data['total_amount']<0].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "88a5b9b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:01.335430Z",
     "iopub.status.busy": "2025-06-16T10:23:01.334710Z",
     "iopub.status.idle": "2025-06-16T10:23:01.362025Z",
     "shell.execute_reply": "2025-06-16T10:23:01.361174Z"
    },
    "papermill": {
     "duration": 0.048879,
     "end_time": "2025-06-16T10:23:01.363760",
     "exception": false,
     "start_time": "2025-06-16T10:23:01.314881",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "payment_type\n",
       "4    37410\n",
       "2    14111\n",
       "3     8080\n",
       "0     3421\n",
       "1       15\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# View payment types of invalid fares\n",
    "taxi_data[taxi_data['total_amount']<0]['payment_type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "20fbe7fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:01.403818Z",
     "iopub.status.busy": "2025-06-16T10:23:01.402960Z",
     "iopub.status.idle": "2025-06-16T10:23:01.672166Z",
     "shell.execute_reply": "2025-06-16T10:23:01.671019Z"
    },
    "papermill": {
     "duration": 0.290747,
     "end_time": "2025-06-16T10:23:01.673718",
     "exception": false,
     "start_time": "2025-06-16T10:23:01.382971",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# View trip distance of invalid fares\n",
    "taxi_data[taxi_data['total_amount']<0]['trip_distance'].hist(bins=60, figsize=(10,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4b0759a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:01.716038Z",
     "iopub.status.busy": "2025-06-16T10:23:01.715635Z",
     "iopub.status.idle": "2025-06-16T10:23:01.746106Z",
     "shell.execute_reply": "2025-06-16T10:23:01.745027Z"
    },
    "papermill": {
     "duration": 0.054792,
     "end_time": "2025-06-16T10:23:01.748377",
     "exception": false,
     "start_time": "2025-06-16T10:23:01.693585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(559, 9)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10261</th>\n",
       "      <td>2025-01-01 01:30:13</td>\n",
       "      <td>2025-01-01 01:30:31</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.0</td>\n",
       "      <td>226</td>\n",
       "      <td>226</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18189</th>\n",
       "      <td>2025-01-01 03:57:21</td>\n",
       "      <td>2025-01-01 04:02:26</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.40</td>\n",
       "      <td>1.0</td>\n",
       "      <td>158</td>\n",
       "      <td>125</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19155</th>\n",
       "      <td>2025-01-01 03:27:25</td>\n",
       "      <td>2025-01-01 03:43:43</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.50</td>\n",
       "      <td>1.0</td>\n",
       "      <td>144</td>\n",
       "      <td>163</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21300</th>\n",
       "      <td>2025-01-01 04:03:25</td>\n",
       "      <td>2025-01-01 04:11:42</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.69</td>\n",
       "      <td>1.0</td>\n",
       "      <td>255</td>\n",
       "      <td>97</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21920</th>\n",
       "      <td>2025-01-01 04:24:55</td>\n",
       "      <td>2025-01-01 04:29:57</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.72</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  \\\n",
       "10261  2025-01-01 01:30:13   2025-01-01 01:30:31              1.0   \n",
       "18189  2025-01-01 03:57:21   2025-01-01 04:02:26              1.0   \n",
       "19155  2025-01-01 03:27:25   2025-01-01 03:43:43              1.0   \n",
       "21300  2025-01-01 04:03:25   2025-01-01 04:11:42              2.0   \n",
       "21920  2025-01-01 04:24:55   2025-01-01 04:29:57              4.0   \n",
       "\n",
       "       trip_distance  RatecodeID  PULocationID  DOLocationID  payment_type  \\\n",
       "10261           0.00         1.0           226           226             2   \n",
       "18189           0.40         1.0           158           125             3   \n",
       "19155           3.50         1.0           144           163             4   \n",
       "21300           4.69         1.0           255            97             2   \n",
       "21920           1.72         1.0             7             7             2   \n",
       "\n",
       "       total_amount  \n",
       "10261           0.0  \n",
       "18189           0.0  \n",
       "19155           0.0  \n",
       "21300           0.0  \n",
       "21920           0.0  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Count and investigate zer fares\n",
    "print(taxi_data[taxi_data['total_amount']==0].shape)\n",
    "taxi_data[taxi_data['total_amount']==0].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "94304962",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:01.795564Z",
     "iopub.status.busy": "2025-06-16T10:23:01.795031Z",
     "iopub.status.idle": "2025-06-16T10:23:01.808288Z",
     "shell.execute_reply": "2025-06-16T10:23:01.807430Z"
    },
    "papermill": {
     "duration": 0.03583,
     "end_time": "2025-06-16T10:23:01.809957",
     "exception": false,
     "start_time": "2025-06-16T10:23:01.774127",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "payment_type\n",
       "4    238\n",
       "3    155\n",
       "1     78\n",
       "0     47\n",
       "2     40\n",
       "5      1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data[taxi_data['total_amount']==0]['payment_type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "8d5710de",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:01.860903Z",
     "iopub.status.busy": "2025-06-16T10:23:01.860622Z",
     "iopub.status.idle": "2025-06-16T10:23:02.093335Z",
     "shell.execute_reply": "2025-06-16T10:23:02.092449Z"
    },
    "papermill": {
     "duration": 0.25708,
     "end_time": "2025-06-16T10:23:02.094890",
     "exception": false,
     "start_time": "2025-06-16T10:23:01.837810",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "taxi_data[taxi_data['total_amount']==0]['trip_distance'].hist(bins=60, figsize=(10,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "68dbcb21",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.139188Z",
     "iopub.status.busy": "2025-06-16T10:23:02.138801Z",
     "iopub.status.idle": "2025-06-16T10:23:02.151815Z",
     "shell.execute_reply": "2025-06-16T10:23:02.150974Z"
    },
    "papermill": {
     "duration": 0.03799,
     "end_time": "2025-06-16T10:23:02.153628",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.115638",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "trip_distance\n",
       "0.00     262\n",
       "0.10      19\n",
       "0.50      17\n",
       "0.40      15\n",
       "0.30      14\n",
       "        ... \n",
       "1.46       1\n",
       "6.60       1\n",
       "1.72       1\n",
       "1.45       1\n",
       "14.68      1\n",
       "Name: count, Length: 112, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data[taxi_data['total_amount']==0]['trip_distance'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "005aaa7e",
   "metadata": {
    "papermill": {
     "duration": 0.021767,
     "end_time": "2025-06-16T10:23:02.196693",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.174926",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### We can get rid of trips that have zero and negative total amount "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "6e763c6c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.240573Z",
     "iopub.status.busy": "2025-06-16T10:23:02.239487Z",
     "iopub.status.idle": "2025-06-16T10:23:02.252107Z",
     "shell.execute_reply": "2025-06-16T10:23:02.251259Z"
    },
    "papermill": {
     "duration": 0.036311,
     "end_time": "2025-06-16T10:23:02.253582",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.217271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1913, 9)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data[taxi_data['total_amount']>200].shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f5408ce8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.297411Z",
     "iopub.status.busy": "2025-06-16T10:23:02.296953Z",
     "iopub.status.idle": "2025-06-16T10:23:02.320171Z",
     "shell.execute_reply": "2025-06-16T10:23:02.319268Z"
    },
    "papermill": {
     "duration": 0.047484,
     "end_time": "2025-06-16T10:23:02.321753",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.274269",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25.611291697288177"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data['total_amount'].mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6aec6b4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.366048Z",
     "iopub.status.busy": "2025-06-16T10:23:02.365243Z",
     "iopub.status.idle": "2025-06-16T10:23:02.378921Z",
     "shell.execute_reply": "2025-06-16T10:23:02.377863Z"
    },
    "papermill": {
     "duration": 0.03717,
     "end_time": "2025-06-16T10:23:02.380853",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.343683",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "total_amount\n",
       "201.00    32\n",
       "301.00    21\n",
       "251.00    10\n",
       "401.00     9\n",
       "203.50     7\n",
       "          ..\n",
       "220.73     1\n",
       "283.50     1\n",
       "262.98     1\n",
       "234.29     1\n",
       "305.38     1\n",
       "Name: count, Length: 1600, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data[taxi_data['total_amount']>200]['total_amount'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89e3a542",
   "metadata": {
    "papermill": {
     "duration": 0.020513,
     "end_time": "2025-06-16T10:23:02.422217",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.401704",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### We can fix the threshold to 200$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "36dd4074",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.465828Z",
     "iopub.status.busy": "2025-06-16T10:23:02.465514Z",
     "iopub.status.idle": "2025-06-16T10:23:02.646564Z",
     "shell.execute_reply": "2025-06-16T10:23:02.645560Z"
    },
    "papermill": {
     "duration": 0.205371,
     "end_time": "2025-06-16T10:23:02.648420",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.443049",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Remove invalid and extreme fare values\n",
    "taxi_data_filtered = taxi_data[(taxi_data['total_amount']>0)&(taxi_data['total_amount']<200)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "57908587",
   "metadata": {
    "papermill": {
     "duration": 0.022242,
     "end_time": "2025-06-16T10:23:02.691413",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.669171",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Records Removed During Cleaning\n",
    "\n",
    "To understand the impact of our filtering steps, we compare the shape of the original dataset to the cleaned one.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "20d7976e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.736761Z",
     "iopub.status.busy": "2025-06-16T10:23:02.736437Z",
     "iopub.status.idle": "2025-06-16T10:23:02.742021Z",
     "shell.execute_reply": "2025-06-16T10:23:02.740897Z"
    },
    "papermill": {
     "duration": 0.030003,
     "end_time": "2025-06-16T10:23:02.743642",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.713639",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original shape: (3475226, 9)\n",
      "After cleaning: (3409712, 9)\n"
     ]
    }
   ],
   "source": [
    "# Examine how many records were removed during filtering\n",
    "print(\"Original shape:\", taxi_data.shape)\n",
    "print(\"After cleaning:\", taxi_data_filtered.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "05d122ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.787256Z",
     "iopub.status.busy": "2025-06-16T10:23:02.786880Z",
     "iopub.status.idle": "2025-06-16T10:23:02.872059Z",
     "shell.execute_reply": "2025-06-16T10:23:02.870908Z"
    },
    "papermill": {
     "duration": 0.108603,
     "end_time": "2025-06-16T10:23:02.873609",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.765006",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tpep_pickup_datetime          0\n",
       "tpep_dropoff_datetime         0\n",
       "passenger_count          536675\n",
       "trip_distance                 0\n",
       "RatecodeID               536675\n",
       "PULocationID                  0\n",
       "DOLocationID                  0\n",
       "payment_type                  0\n",
       "total_amount                  0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check for missing values in the filtered dataset\n",
    "taxi_data_filtered.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6771c680",
   "metadata": {
    "papermill": {
     "duration": 0.020565,
     "end_time": "2025-06-16T10:23:02.914949",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.894384",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 4. Data Preparation & Feature Engineering\n",
    "\n",
    "To make the data more useful for machine learning models, we create new features from existing ones and structure the data more meaningfully.\n",
    "\n",
    "Steps covered in this section:\n",
    "\n",
    "- Convert categorical columns (`RatecodeID`, `payment_type`, etc.) to string types\n",
    "- Extract time-related features: year, month, day, hour, and a daily timestamp (`transaction_date`)\n",
    "- Filter records to include only January 2025\n",
    "- Group records by region (pickup location and time window) to calculate average fare and trip distance per area/hour\n",
    "- Count the number of transactions per region-time slot as a proxy for demand\n",
    "\n",
    "This grouped format provides a more stable basis for both regression and classification models, reducing the noise found in individual rides.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9695aaa1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:02.959595Z",
     "iopub.status.busy": "2025-06-16T10:23:02.959001Z",
     "iopub.status.idle": "2025-06-16T10:23:03.040012Z",
     "shell.execute_reply": "2025-06-16T10:23:03.039134Z"
    },
    "papermill": {
     "duration": 0.106114,
     "end_time": "2025-06-16T10:23:03.041702",
     "exception": false,
     "start_time": "2025-06-16T10:23:02.935588",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Starting with a copy of the filtered dataset\n",
    "taxi_data_prepared = taxi_data_filtered.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ef8afa4d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:03.084459Z",
     "iopub.status.busy": "2025-06-16T10:23:03.084099Z",
     "iopub.status.idle": "2025-06-16T10:23:03.091272Z",
     "shell.execute_reply": "2025-06-16T10:23:03.090288Z"
    },
    "papermill": {
     "duration": 0.030358,
     "end_time": "2025-06-16T10:23:03.092809",
     "exception": false,
     "start_time": "2025-06-16T10:23:03.062451",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tpep_pickup_datetime     datetime64[us]\n",
       "tpep_dropoff_datetime    datetime64[us]\n",
       "passenger_count                 float64\n",
       "trip_distance                   float64\n",
       "RatecodeID                      float64\n",
       "PULocationID                      int32\n",
       "DOLocationID                      int32\n",
       "payment_type                      int64\n",
       "total_amount                    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Check data types\n",
    "taxi_data_prepared.dtypes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d6cba0ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:03.137839Z",
     "iopub.status.busy": "2025-06-16T10:23:03.136801Z",
     "iopub.status.idle": "2025-06-16T10:23:07.732928Z",
     "shell.execute_reply": "2025-06-16T10:23:07.732212Z"
    },
    "papermill": {
     "duration": 4.620604,
     "end_time": "2025-06-16T10:23:07.734556",
     "exception": false,
     "start_time": "2025-06-16T10:23:03.113952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Convert categorical IDs to strings\n",
    "taxi_data_prepared['RatecodeID']   = taxi_data_prepared['RatecodeID'].astype('string')\n",
    "taxi_data_prepared['PULocationID'] = taxi_data_prepared['PULocationID'].astype('string')\n",
    "taxi_data_prepared['DOLocationID'] = taxi_data_prepared['DOLocationID'].astype('string')\n",
    "taxi_data_prepared['payment_type'] = taxi_data_prepared['payment_type'].astype('string')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f1d2ab27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:07.777352Z",
     "iopub.status.busy": "2025-06-16T10:23:07.776600Z",
     "iopub.status.idle": "2025-06-16T10:23:07.783202Z",
     "shell.execute_reply": "2025-06-16T10:23:07.782347Z"
    },
    "papermill": {
     "duration": 0.029382,
     "end_time": "2025-06-16T10:23:07.784636",
     "exception": false,
     "start_time": "2025-06-16T10:23:07.755254",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tpep_pickup_datetime     datetime64[us]\n",
       "tpep_dropoff_datetime    datetime64[us]\n",
       "passenger_count                 float64\n",
       "trip_distance                   float64\n",
       "RatecodeID               string[python]\n",
       "PULocationID             string[python]\n",
       "DOLocationID             string[python]\n",
       "payment_type             string[python]\n",
       "total_amount                    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data_prepared.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "faa4078c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:07.828196Z",
     "iopub.status.busy": "2025-06-16T10:23:07.827856Z",
     "iopub.status.idle": "2025-06-16T10:23:07.841073Z",
     "shell.execute_reply": "2025-06-16T10:23:07.840085Z"
    },
    "papermill": {
     "duration": 0.037068,
     "end_time": "2025-06-16T10:23:07.842552",
     "exception": false,
     "start_time": "2025-06-16T10:23:07.805484",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2025-01-01 00:18:38</td>\n",
       "      <td>2025-01-01 00:26:59</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>229</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2025-01-01 00:32:40</td>\n",
       "      <td>2025-01-01 00:35:13</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.0</td>\n",
       "      <td>236</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>12.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2025-01-01 00:44:04</td>\n",
       "      <td>2025-01-01 00:46:01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>1</td>\n",
       "      <td>12.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2025-01-01 00:14:27</td>\n",
       "      <td>2025-01-01 00:20:01</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.52</td>\n",
       "      <td>1.0</td>\n",
       "      <td>244</td>\n",
       "      <td>244</td>\n",
       "      <td>2</td>\n",
       "      <td>9.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2025-01-01 00:21:34</td>\n",
       "      <td>2025-01-01 00:25:06</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.66</td>\n",
       "      <td>1.0</td>\n",
       "      <td>244</td>\n",
       "      <td>116</td>\n",
       "      <td>2</td>\n",
       "      <td>8.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  trip_distance  \\\n",
       "0  2025-01-01 00:18:38   2025-01-01 00:26:59              1.0           1.60   \n",
       "1  2025-01-01 00:32:40   2025-01-01 00:35:13              1.0           0.50   \n",
       "2  2025-01-01 00:44:04   2025-01-01 00:46:01              1.0           0.60   \n",
       "3  2025-01-01 00:14:27   2025-01-01 00:20:01              3.0           0.52   \n",
       "4  2025-01-01 00:21:34   2025-01-01 00:25:06              3.0           0.66   \n",
       "\n",
       "  RatecodeID PULocationID DOLocationID payment_type  total_amount  \n",
       "0        1.0          229          237            1         18.00  \n",
       "1        1.0          236          237            1         12.12  \n",
       "2        1.0          141          141            1         12.10  \n",
       "3        1.0          244          244            2          9.70  \n",
       "4        1.0          244          116            2          8.30  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data_prepared.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "34626fe7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:07.887221Z",
     "iopub.status.busy": "2025-06-16T10:23:07.886882Z",
     "iopub.status.idle": "2025-06-16T10:23:09.318610Z",
     "shell.execute_reply": "2025-06-16T10:23:09.317599Z"
    },
    "papermill": {
     "duration": 1.455765,
     "end_time": "2025-06-16T10:23:09.320326",
     "exception": false,
     "start_time": "2025-06-16T10:23:07.864561",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "taxi_data_prepared['transaction_date'] = pd.to_datetime(taxi_data_prepared['tpep_pickup_datetime'].dt.date)\n",
    "# Create time-related features\n",
    "taxi_data_prepared['transaction_year'] = taxi_data_prepared['tpep_pickup_datetime'].dt.year\n",
    "taxi_data_prepared['transaction_month'] = taxi_data_prepared['tpep_pickup_datetime'].dt.month\n",
    "taxi_data_prepared['transaction_day'] =  taxi_data_prepared['tpep_pickup_datetime'].dt.day\n",
    "taxi_data_prepared['transaction_hour'] = taxi_data_prepared['tpep_pickup_datetime'].dt.hour"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "6b4df8e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:09.363680Z",
     "iopub.status.busy": "2025-06-16T10:23:09.363103Z",
     "iopub.status.idle": "2025-06-16T10:23:09.377142Z",
     "shell.execute_reply": "2025-06-16T10:23:09.376327Z"
    },
    "papermill": {
     "duration": 0.037097,
     "end_time": "2025-06-16T10:23:09.378483",
     "exception": false,
     "start_time": "2025-06-16T10:23:09.341386",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tpep_pickup_datetime</th>\n",
       "      <th>tpep_dropoff_datetime</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_year</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2025-01-01 00:18:38</td>\n",
       "      <td>2025-01-01 00:26:59</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>229</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>18.00</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>2025</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2025-01-01 00:32:40</td>\n",
       "      <td>2025-01-01 00:35:13</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>1.0</td>\n",
       "      <td>236</td>\n",
       "      <td>237</td>\n",
       "      <td>1</td>\n",
       "      <td>12.12</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>2025</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2025-01-01 00:44:04</td>\n",
       "      <td>2025-01-01 00:46:01</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.60</td>\n",
       "      <td>1.0</td>\n",
       "      <td>141</td>\n",
       "      <td>141</td>\n",
       "      <td>1</td>\n",
       "      <td>12.10</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>2025</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2025-01-01 00:14:27</td>\n",
       "      <td>2025-01-01 00:20:01</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.52</td>\n",
       "      <td>1.0</td>\n",
       "      <td>244</td>\n",
       "      <td>244</td>\n",
       "      <td>2</td>\n",
       "      <td>9.70</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>2025</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2025-01-01 00:21:34</td>\n",
       "      <td>2025-01-01 00:25:06</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.66</td>\n",
       "      <td>1.0</td>\n",
       "      <td>244</td>\n",
       "      <td>116</td>\n",
       "      <td>2</td>\n",
       "      <td>8.30</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>2025</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  tpep_pickup_datetime tpep_dropoff_datetime  passenger_count  trip_distance  \\\n",
       "0  2025-01-01 00:18:38   2025-01-01 00:26:59              1.0           1.60   \n",
       "1  2025-01-01 00:32:40   2025-01-01 00:35:13              1.0           0.50   \n",
       "2  2025-01-01 00:44:04   2025-01-01 00:46:01              1.0           0.60   \n",
       "3  2025-01-01 00:14:27   2025-01-01 00:20:01              3.0           0.52   \n",
       "4  2025-01-01 00:21:34   2025-01-01 00:25:06              3.0           0.66   \n",
       "\n",
       "  RatecodeID PULocationID DOLocationID payment_type  total_amount  \\\n",
       "0        1.0          229          237            1         18.00   \n",
       "1        1.0          236          237            1         12.12   \n",
       "2        1.0          141          141            1         12.10   \n",
       "3        1.0          244          244            2          9.70   \n",
       "4        1.0          244          116            2          8.30   \n",
       "\n",
       "  transaction_date  transaction_year  transaction_month  transaction_day  \\\n",
       "0       2025-01-01              2025                  1                1   \n",
       "1       2025-01-01              2025                  1                1   \n",
       "2       2025-01-01              2025                  1                1   \n",
       "3       2025-01-01              2025                  1                1   \n",
       "4       2025-01-01              2025                  1                1   \n",
       "\n",
       "   transaction_hour  \n",
       "0                 0  \n",
       "1                 0  \n",
       "2                 0  \n",
       "3                 0  \n",
       "4                 0  "
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_data_prepared.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "63f15ae7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:09.423143Z",
     "iopub.status.busy": "2025-06-16T10:23:09.422349Z",
     "iopub.status.idle": "2025-06-16T10:23:12.029911Z",
     "shell.execute_reply": "2025-06-16T10:23:12.028879Z"
    },
    "papermill": {
     "duration": 2.632035,
     "end_time": "2025-06-16T10:23:12.031872",
     "exception": false,
     "start_time": "2025-06-16T10:23:09.399837",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<Axes: title={'center': 'passenger_count'}>,\n",
       "        <Axes: title={'center': 'trip_distance'}>,\n",
       "        <Axes: title={'center': 'total_amount'}>],\n",
       "       [<Axes: title={'center': 'transaction_year'}>,\n",
       "        <Axes: title={'center': 'transaction_month'}>,\n",
       "        <Axes: title={'center': 'transaction_day'}>],\n",
       "       [<Axes: title={'center': 'transaction_hour'}>, <Axes: >, <Axes: >]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x1000 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize distributions\n",
    "taxi_data_prepared.select_dtypes(include='number').hist(figsize=(20,10), bins=60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "bd422c2c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:12.081063Z",
     "iopub.status.busy": "2025-06-16T10:23:12.080733Z",
     "iopub.status.idle": "2025-06-16T10:23:13.781208Z",
     "shell.execute_reply": "2025-06-16T10:23:13.780180Z"
    },
    "papermill": {
     "duration": 1.726913,
     "end_time": "2025-06-16T10:23:13.782949",
     "exception": false,
     "start_time": "2025-06-16T10:23:12.056036",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Restrict to January 2025 only\n",
    "taxi_data_prepared = taxi_data_prepared[taxi_data_prepared['transaction_year']==2025]\n",
    "taxi_data_prepared = taxi_data_prepared[taxi_data_prepared['transaction_month']==1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "6d727d00",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:13.829850Z",
     "iopub.status.busy": "2025-06-16T10:23:13.829581Z",
     "iopub.status.idle": "2025-06-16T10:23:16.302131Z",
     "shell.execute_reply": "2025-06-16T10:23:16.301159Z"
    },
    "papermill": {
     "duration": 2.498029,
     "end_time": "2025-06-16T10:23:16.303721",
     "exception": false,
     "start_time": "2025-06-16T10:23:13.805692",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[<Axes: title={'center': 'passenger_count'}>,\n",
       "        <Axes: title={'center': 'trip_distance'}>,\n",
       "        <Axes: title={'center': 'total_amount'}>],\n",
       "       [<Axes: title={'center': 'transaction_year'}>,\n",
       "        <Axes: title={'center': 'transaction_month'}>,\n",
       "        <Axes: title={'center': 'transaction_day'}>],\n",
       "       [<Axes: title={'center': 'transaction_hour'}>, <Axes: >, <Axes: >]],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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tUqvvvqq2rRpo2PHjhV6QytUHeff1H3fvn264YYb1Lx5c02bNk0hISHy8vLS8uXLNX36dOXl5Vn7fPzxx9q4caO+/PJLrVy5UkOHDtXUqVO1ceNG1ahRQwEBAUpOTtbKlSv11Vdf6auvvtK8efM0ePBgLViwQNJfBUCvXr00evToQmO78sor7R57eHgU2s8YU+J55+XlKSAgQAsXLix0e/614fOdf2aQs5z/XJ0vNze30HZH5gsALhX1C1xZaV/fi3ptLit33nmnunXrps8++0yrVq3SlClT9Morr+jTTz9V3759L7jv+++/r/vuu0/9+/fXqFGjFBAQIA8PD02aNEn79u0r0N8RdUR+7XjvvfcqJiam0D5t27Yt9ngAAFRlpak7XnrpJT3//PMaOnSoJk6cqLp168rd3V0jR460Xq8vlaNqDEe+h3Gh908KOw7vn6CyYwGmmPr27XvBP6yysrL07LPP6l//+pfS09PVunVrvfLKK+rRo4ekv26APnv2bO3YscNaLb6UT/WjYvv111/tnve9e/cqLy9PjRs31pdffqmsrCx98cUXdqv/f78cV76uXbuqa9euevHFF7Vo0SINGjRIH3zwge6//35Jf30KoV+/furXr5/y8vL0yCOP6K233tLzzz+vpk2b6vLLL9fJkyetM15KKzQ01JrT3/297fLLL9fXX3+ta665pswWV/IvKbZjx44i+/j7+8vX11d79uwpsG337t1yd3e3PgWS/wmM9PR06zJwkkr1KY/yfuMIQNVD/QJnc+Rr3YXqqOLIr1V+/fXXAtsKqwUK06BBAz3yyCN65JFHdOTIEXXs2FEvvvii9XNW1Hw//vhjNWnSRJ9++qldn7FjxxbruH9X3DqnZs2ays3NdVi9BwBAZVbY63hoaKjy8vL066+/qkWLFlZ7Wlqa0tPTrfqiqP2lv+qAnj176t1337VrT09PV/369UsVs6NrjKLkz3PPnj12l3DPzs5WSkqKXa1Rp04dpaenFxjjwIEDdvuWBO+foCLjEmQOEhcXp6SkJH3wwQf66aefdMcdd6hPnz7WH3hffvmlmjRpoqVLlyosLEyNGzfW/fffzydIq5hZs2bZPX799dcl/fUGWf6K//kr/BkZGZo3b57dPsePHy/wKYD27dtLknUZsj///NNuu7u7u/UJx/w+d955p5KSkrRy5coCcaanp+vcuXMlmltwcLBat26t9957TydPnrTav/nmG23fvt2u75133qnc3FxNnDixwDjnzp0r9IW6pPz9/XXddddp7ty5OnjwoN22/Px5eHiod+/e+vzzz+0uX5KWlqZFixbp2muvlZ+fn6S/Fo0k2d0b59SpU9YZRZeievXqkuSQ+QLApaB+QVlz5Gvdheqo4mjQoIHat2+vBQsW2F2SIzExUbt27brgvrm5uQUu4xEQEKDg4GC7y8BWr1690Mt9FFbnbdq0SUlJScWK/e+KW+cMGDBAn3zySaELNUePHr2kYwMAUFkVVrfceOONkqQZM2bY9Z02bZokKTo62m7/wmoeDw+PAu/jLF682Lq/Smk4usYoSmRkpLy8vPTaa6/ZHevdd99VRkaGXR4uv/xybdy4UdnZ2Vbb0qVLL/kS71LRNRZQEXAGjAMcPHhQ8+bN08GDBxUcHCxJevLJJ7VixQrNmzdPL730kvbv368DBw5o8eLFeu+995Sbm6vHH39ct99+u9asWePkGaC8pKSk6Oabb1afPn2UlJSk999/X/fcc4/atWsnb29v66yVBx98UCdPntQ///lPBQQE6PDhw9YYCxYs0Jtvvqlbb71Vl19+uU6cOKF//vOf8vPzswqD/DfHrr/+ejVs2FAHDhzQ66+/rvbt21uf2Bg1apS++OIL3XTTTbrvvvsUHh6uU6dOafv27fr444/122+/lfiTGC+99JJuueUWXXPNNRoyZIiOHz+uN954Q61bt7ZblOnevbsefPBBTZo0ScnJyerdu7c8PT3166+/avHixZo5c6Zuv/32Uuf7tdde07XXXquOHTvqgQceUFhYmH777TctW7ZMycnJkqQXXnhBiYmJuvbaa/XII4+oWrVqeuutt5SVlaXJkydbY/Xu3VuNGjXSsGHDNGrUKHl4eGju3Lny9/cv8MZHcbVv314eHh565ZVXlJGRIZvNpuuvv14BAQGlnjsAXAz1C8pDeHi4JOnZZ5/V3XffLU9PT/Xr1++SxrpQHVVckyZNUnR0tK699loNHTpUx44d0+uvv65WrVrZ1Sp/d+LECTVs2FC333672rVrpxo1aujrr7/Wli1bNHXqVLv5fvjhh4qPj9dVV12lGjVqqF+/frrpppv06aef6tZbb1V0dLRSUlI0Z84ctWzZ8oLHvZDi1Dkvv/yy1q5dqy5dumj48OFq2bKljh07pu+//15ff/01i6kAAJynqLolJiZGb7/9ttLT09W9e3dt3rxZCxYsUP/+/dWzZ0+7/WfPnq0XXnhBTZs2VUBAgK6//nrddNNNmjBhgoYMGaKrr75a27dv18KFCy/5bJDzlUWNURh/f38lJCRo/Pjx6tOnj26++Wbt2bNHb775pq666irde++9Vt/7779fH3/8sfr06aM777xT+/bt0/vvv299sPVSFFVjARWCQYlJMp999pn1eOnSpUaSqV69ut1XtWrVzJ133mmMMWb48OFGktmzZ4+137Zt24wks3v37vKeAsrZ2LFjjSSza9cuc/vtt5uaNWuaOnXqmLi4OHPmzBmr3xdffGHatm1rvL29TePGjc0rr7xi5s6daySZlJQUY4wx33//vRk4cKBp1KiRsdlsJiAgwNx0001m69at1jgff/yx6d27twkICDBeXl6mUaNG5sEHHzSHDx+2i+vEiRMmISHBNG3a1Hh5eZn69eubq6++2rz66qsmOzvbGGNMSkqKkWSmTJlSYF6SzNixY+3aPvjgA9O8eXNjs9lM69atzRdffGEGDBhgmjdvXmD/t99+24SHhxsfHx9Ts2ZN06ZNGzN69Ghz6NAhq09oaKiJjo4ucc7z7dixw9x6662mdu3axtvb2zRr1sw8//zzdn2+//57ExUVZWrUqGF8fX1Nz549zYYNGwqMtW3bNtOlSxcrp9OmTTPz5s2ze34uFHP37t1N9+7d7dr++c9/miZNmhgPDw8jyaxdu/aS5woAF0L9AmeZOHGiueyyy4y7u7v1minJxMbGFtr/7/VFceuo4vrkk09MixYtjM1mMy1btjSffvqpiYmJMaGhoUXGkZWVZUaNGmXatWtnatasaapXr27atWtn3nzzTbt9Tp48ae655x5Tu3ZtI8kaMy8vz7z00ksmNDTU2Gw206FDB7N06dICxy1p3VWcOictLc3ExsaakJAQ4+npaYKCgswNN9xg3n777RLnDgCAyq6wuiUnJ8eMHz/ehIWFGU9PTxMSEmISEhLM2bNn7fZNTU010dHRpmbNmkaS9ff/2bNnzRNPPGEaNGhgfHx8zDXXXGOSkpIKvEeQXwfMmzev2PGWtsZYu3atkWQWL15s157/XseWLVvs2t944w3TvHlz4+npaQIDA83DDz9sjh8/XiCuqVOnmssuu8zYbDZzzTXX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4APj5eVl5s6da3bu3GmGDx9uateubdLS0pwdWoUXFRVl5s2bZ3bs2GGSk5PNjTfeaBo1amROnjzp7NAqjc2bN5vGjRubtm3bmhEjRjg7nArv2LFjJjQ01Nx3331m06ZNZv/+/WblypVm7969zg6twnvxxRdNvXr1zNKlS01KSopZvHixqVGjhpk5c6azQwMqpMpYv4wdO9a0atXKHD582Po6evSotf2hhx4yISEhZvXq1Wbr1q2ma9eu5uqrr7a2nzt3zrRu3dpERkaaH374wSxfvtzUr1/fJCQkWH32799vfH19TXx8vNm1a5d5/fXXjYeHh1mxYoXVx9m5Xb58uXn22WfNp59+aiSZzz77zG77yy+/bGrVqmWWLFlifvzxR3PzzTebsLAwc+bMGatPnz59TLt27czGjRvNv//9b9O0aVMzcOBAa3tGRoYJDAw0gwYNMjt27DD/+te/jI+Pj3nrrbesPt99953x8PAwkydPNrt27TLPPfec8fT0NNu3by9RLOWZm5iYGNOnTx+776Fjx47Z9amsuSlO3e1KP0MXi6U889K9e3czfPhwu++bjIyMSp0XwFmc/RpbUo74HeJspa2vXMGRI0fs4k9MTDSSzNq1a40xrvkclEc958w5pKenm8jISPPhhx+a3bt3m6SkJNO5c2cTHh5uN0ZoaKiZMGGC3XNTnu8Jlkft6Ow5nB/74cOHzdy5c42bm5vZt2+f1ceZz0N51ailwQJMOejcubOJjY21Hufm5prg4GAzadIkJ0ZVOR05csRIMt98842zQ6kUTpw4Ya644gqTmJhounfvzgKMAzz11FPm2muvdXYYlVJ0dLQZOnSoXdttt91mBg0a5KSIgIqtMtYvY8eONe3atSt0W3p6uvH09DSLFy+22n7++WcjySQlJRlj/vrjxN3d3aSmplp9Zs+ebfz8/ExWVpYxxpjRo0ebVq1a2Y191113maioKOuxK+X2739k5eXlmaCgIDNlyhSrLT093dhsNvOvf/3LGGPMrl27jCSzZcsWq89XX31l3NzczO+//26MMebNN980derUsfJizF+vgc2aNbMe33nnnSY6Otouni5dupgHH3yw2LGUpaL+iL7llluK3Keq5MaYgnW3K/0MFSeWslLY3yMXq6OrQl6A8uJKr7GX4lJ+hzhbaesrVzRixAhz+eWXm7y8PGOM6z8H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uEONGjWSzWZTSEiIHn/8cZ05c6bAcXfv3q0777xT/v7+8vHxUbNmzfTss89edM5S4dcd3b9/v+644w7VrVtXvr6+6tq1q5YtW2bXZ926dXJzc9NHH32kF198UQ0bNpS3t7duuOEG7d27t9jPyf79++Xm5qbp06cX2LZhwwa5ubnpX//6l9X2+++/a+jQoQoMDLTyO3fuXLv9srOzNWbMGIWHh6tWrVqqXr26unXrprVr19r1y3/eX331Vc2YMUOXX365bDabdu3aVez4AQAoLeoT16tPpP9d//zbb7/VY489Jn9/f9WuXVsPPvigsrOzlZ6ersGDB6tOnTqqU6eORo8eLWOM3RinTp3SE088oZCQENlsNjVr1kyvvvpqgX7FeY4ulrN8F3ueAQAob9Q6rlnrSNLOnTt1/fXXy8fHRw0bNtQLL7ygvLy8Av0+//xzRUdHKzg4WDabTZdffrkmTpyo3Nxcq8/YsWPl6empo0ePFtj/gQceUO3atavE4hpcVzVnBwBUBbfddpt++eUX/etf/9L06dNVv359SZK/v78kac2aNfroo48UFxen+vXrq3HjxpKkmTNn6uabb9agQYOUnZ2tDz74QHfccYeWLl2q6Ohou2N8++23+vTTT/XII4+oZs2aeu211zRgwAAdPHhQ9erVkyQ99NBD+vjjjxUXF6eWLVvqzz//1Lfffquff/5ZHTt2lCQtXrxYp0+f1sMPP6x69epp8+bNev311/Xf//5Xixcvto73008/qVu3bvL09NQDDzygxo0ba9++ffryyy/14osvXnTOf5eWlqarr75ap0+f1mOPPaZ69eppwYIFuvnmm/Xxxx/r1ltvtev/8ssvy93dXU8++aQyMjI0efJkDRo0SJs2bSrWc9KkSRNdc801WrhwoR5//HG7bQsXLlTNmjV1yy23WLF17drVKq78/f311VdfadiwYcrMzNTIkSMlSZmZmXrnnXc0cOBADR8+XCdOnNC7776rqKgobd68We3bt7c7zrx583T27Fk98MADstlsqlu3brFiBwDAEahPXK8+Od+jjz6qoKAgjR8/Xhs3btTbb7+t2rVra8OGDWrUqJFeeuklLV++XFOmTFHr1q01ePBgSZIxRjfffLPWrl2rYcOGqX379lq5cqVGjRql33//vcCHTy72HBUnZ8V5ngEAKG/UOq5Z66Smpqpnz546d+6cnn76aVWvXl1vv/22fHx8CvSdP3++atSoofj4eNWoUUNr1qzRmDFjlJmZqSlTpkiS/vGPf2jChAn68MMPFRcXZ+2bnZ2tjz/+WAMGDJC3t3ex4wMczgAoF1OmTDGSTEpKil27JOPu7m527txZYJ/Tp0/bPc7OzjatW7c2119/fYExvLy8zN69e622H3/80Ugyr7/+utVWq1YtExsbe8E4/35MY4yZNGmScXNzMwcOHLDarrvuOlOzZk27NmOMycvLs/5f1JyNMSY0NNTExMRYj0eOHGkkmX//+99W24kTJ0xYWJhp3Lixyc3NNcYYs3btWiPJtGjRwmRlZVl9Z86caSSZ7du3X3B+53vrrbeMJPPzzz9bbdnZ2aZ+/fp2sQ0bNsw0aNDA/PHHH3b733333aZWrVpWzs6dO2cXkzHGHD9+3AQGBpqhQ4dabSkpKUaS8fPzM0eOHCl2vAAAOBr1iT1XqE/mzZtnJJmoqCi7uCMiIoybm5t56KGHrLZz586Zhg0bmu7du1ttS5YsMZLMCy+8YDfu7bffbtzc3Oyej+I+RxfKWXHHAADAGah17LlCrZN/zE2bNlltR44cMbVq1SoQd2F5efDBB42vr685e/as1RYREWG6dOli1+/TTz81kszatWuLHRtQFrgEGeACunfvrpYtWxZoP3/1//jx48rIyFC3bt3sTlPNFxkZqcsvv9x63LZtW/n5+Wn//v1WW+3atbVp0yYdOnSoyFjOP+apU6f0xx9/6Oqrr5YxRj/88IMk6ejRo1q/fr2GDh2qRo0a2e3v5uZWjBkXtHz5cnXu3FnXXnut1VajRg098MAD+u233wpcnmvIkCHy8vKyHnfr1k2S7OZ7MXfeeae8vb21cOFCq23lypX6448/dO+990r661Okn3zyifr16ydjjP744w/rKyoqShkZGdbz4eHhYcWUl5enY8eO6dy5c+rUqVOhz9mAAQOK/BQKAADORn3inPok37Bhw+zi7tKli4wxGjZsmNXm4eGhTp062Y2/fPlyeXh46LHHHrMb74knnpAxRl999ZVde3Geo4txxBgAAJQ3ah3n1DrLly9X165d1blzZ6vN399fgwYNKtD3/LycOHFCf/zxh7p166bTp09r9+7d1rbBgwdr06ZN2rdvn9W2cOFChYSEqHv37sWODSgLLMAU0/r169WvXz8FBwfLzc1NS5YsKfEYxhi9+uqruvLKK2Wz2XTZZZfpxRdfdHywqHDCwsIKbV+6dKm6du0qb29v1a1bV/7+/po9e7YyMjIK9P37i68k1alTR8ePH7ceT548WTt27FBISIg6d+6scePGFXiRPHjwoO677z7VrVtXNWrUkL+/v/VilX/c/H1at259aRMuxIEDB9SsWbMC7S1atLC2n+/v861Tp44k2c33YmrXrq1+/fpp0aJFVtvChQt12WWX6frrr5f0V4GTnp6ut99+W/7+/nZfQ4YMkSQdOXLE2n/BggVq27atvL29Va9ePfn7+2vZsmWFPmdFPe8A4CjULygN6hPn1CdFjVWrVi1JUkhISIH288c/cOCAgoODVbNmzUuKOT/uksTsiDEAAChv1DrOqXUOHDigK664okB7YXHs3LlTt956q2rVqiU/Pz/5+/tbH5g9//m46667ZLPZrA/YZmRkaOnSpRo0aNAlL04BjsICTDGdOnVK7dq106xZsy55jBEjRuidd97Rq6++qt27d+uLL76wW+1F1VXYdS7//e9/6+abb5a3t7fefPNNLV++XImJibrnnnsK3EBV+usTkIU5v++dd96p/fv36/XXX1dwcLCmTJmiVq1aWZ+EzM3NVa9evbRs2TI99dRTWrJkiRITEzV//nxJKvSGaM5SnPkWx+DBg7V//35t2LBBJ06c0BdffKGBAwfK3f2vX4/5c7733nuVmJhY6Nc111wjSXr//fd133336fLLL9e7776rFStWKDExUddff32huSvseQcAR6J+QWlQn5Sco+qTC41VWPuljH+x45RkTEfOGwCA8kKtU3Ll+Zqfnp6u7t2768cff9SECRP05ZdfKjExUa+88ook+7zUqVNHN910k7UA8/HHHysrK8tarAGcqZqzA6go+vbtq759+xa5PSsrS88++6z+9a9/KT09Xa1bt9Yrr7yiHj16SJJ+/vlnzZ49Wzt27LBWdPn0e9VS0hX3Tz75RN7e3lq5cqVsNpvVPm/evFLF0aBBAz3yyCN65JFHdOTIEXXs2FEvvvii+vbtq+3bt+uXX37RggULrBu5SlJiYqLdGE2aNJEk7dix44LHKsmcQ0NDtWfPngLt+aeUhoaGFnuskujTp4/8/f21cOFCdenSRadPn9Y//vEPa7u/v79q1qyp3NxcRUZGXnCsjz/+WE2aNNGnn35qN/exY8eWSewAcDHUL7gY6pMLc1Z9UhqhoaH6+uuvdeLECbuzYEoTM58cBQBUVNQ6F+aMWic0NFS//vprgfa/x7Fu3Tr9+eef+vTTT3XddddZ7SkpKYWOO3jwYN1yyy3asmWLFi5cqA4dOqhVq1aODR64BJwB4yBxcXFKSkrSBx98oJ9++kl33HGH+vTpY/1C+fLLL9WkSRMtXbpUYWFhaty4se6//34dO3bMyZGjvFSvXl3SXyv4xeHh4SE3Nzfl5uZabb/99tslXT5G+usTFX8/XTYgIEDBwcHKysqyjinZf3LBGKOZM2fa7efv76/rrrtOc+fO1cGDB+22nb9vSeZ84403avPmzUpKSrLaTp06pbfffluNGzcu9LqsjlCtWjUNHDhQH330kebPn682bdqobdu21nYPDw8NGDBAn3zySaFFztGjR+36SvY52LRpk92cAMCVUL+A+uTCnFWflMaNN96o3NxcvfHGG3bt06dPl5ub2wUXZYtS0u8TAABcBbXOhTmj1rnxxhu1ceNGbd682Wo7evSo3f15pcLzkp2drTfffLPQcfv27av69evrlVde0TfffMPZL3AZnAHjAAcPHtS8efN08OBBBQcHS5KefPJJrVixQvPmzdNLL72k/fv368CBA1q8eLHee+895ebm6vHHH9ftt9+uNWvWOHkGKA/h4eGSpGeffVZ33323PD091a9fvyL7R0dHa9q0aerTp4/uueceHTlyRLNmzVLTpk31008/lfj4J06cUMOGDXX77berXbt2qlGjhr7++mtt2bJFU6dOlSQ1b95cl19+uZ588kn9/vvv8vPz0yeffFLotTxfe+01XXvtterYsaMeeOABhYWF6bffftOyZcuUnJx8wTnnFwPne/rpp/Wvf/1Lffv21WOPPaa6detqwYIFSklJ0SeffGJdEqwsDB48WK+99prWrl1rncp6vpdffllr165Vly5dNHz4cLVs2VLHjh3T999/r6+//tp6I/Kmm27Sp59+qltvvVXR0dFKSUnRnDlz1LJlS508ebLM4geAS0H9Aon6xJXrk0vVr18/9ezZU88++6x+++03tWvXTqtWrdLnn3+ukSNH2t0ouLhKkjMAAFwJtY7r1TqjR4/W//3f/6lPnz4aMWKEqlevrrfffluhoaF2Ob766qtVp04dxcTE6LHHHpObm5v+7//+r8jLnXl6euruu+/WG2+8IQ8PDw0cONDhsQOXxKDEJJnPPvvMerx06VIjyVSvXt3uq1q1aubOO+80xhgzfPhwI8ns2bPH2m/btm1Gktm9e3d5TwFOMnHiRHPZZZcZd3d3I8mkpKQYSSY2NrbQ/u+++6654oorjM1mM82bNzfz5s0zY8eONX//0S1qjNDQUBMTE2OMMSYrK8uMGjXKtGvXztSsWdNUr17dtGvXzrz55pt2++zatctERkaaGjVqmPr165vhw4ebH3/80Ugy8+bNs+u7Y8cOc+utt5ratWsbb29v06xZM/P8889fdM5/jy3fvn37zO23326N17lzZ7N06VK7PmvXrjWSzOLFi+3a83P59xiLq1WrVsbd3d3897//LXR7WlqaiY2NNSEhIcbT09MEBQWZG264wbz99ttWn7y8PPPSSy+Z0NBQY7PZTIcOHczSpUtNTEyMCQ0NLRDrlClTLilWALgU1C8oCvWJa9Un8+bNM5LMli1b7Nrzc3z06FG79piYGFO9enW7thMnTpjHH3/cBAcHG09PT3PFFVeYKVOmmLy8PLt+xXmO8hWVs5KMAQCAM1DruFatY4wxP/30k+nevbvx9vY2l112mZk4caJ599137WI1xpjvvvvOdO3a1fj4+Jjg4GAzevRos3LlSiPJrF27tsC4mzdvNpJM7969SxQPUJbcjOHOiCXl5uamzz77TP3795ckffjhhxo0aJB27txZ4GZUNWrUUFBQkMaOHauXXnpJOTk51rYzZ87I19dXq1atUq9evcpzCgD+pkOHDqpbt65Wr17t7FAAoExQvwAAAACozH788Ue1b99e7733nt39fQFn4hJkDtChQwfl5ubqyJEj6tatW6F9rrnmGp07d0779u2zTvv/5ZdfJLnmzTuBqmTr1q1KTk7W/PnznR0KAJQb6hcAAAAAlck///lP1ahRQ7fddpuzQwEsnAFTTCdPntTevXsl/fWGxbRp09SzZ0/VrVtXjRo10r333qvvvvtOU6dOVYcOHXT06FGtXr1abdu2VXR0tPLy8nTVVVepRo0amjFjhvLy8hQbGys/Pz+tWrXKybMDKpczZ84UuMnd39WtW1e//PKLtm3bpqlTp+qPP/7Q/v375e3tXU5RAkDZo34BXEdx6xMvL69yiggAAMBxnFnrfPnll9q1a5eef/55xcXFadq0aQ4/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0aNH1bp1a7Vt2/Yn7zOA2mVmZqpbt24KDAxUdHS09u7dW2v/s2fPKjk5WZ07d5bNZtPVV1+trKysBorWe7iat2effVY9e/ZUy5YtFRERoWnTpuncuXMNFK132Llzp2677TaFh4fLx8dH69evv+SY7du3a/DgwbLZbOrRo4dWrlxZ73F6G1fz9vbbb2vkyJHq1KmTgoODFRMTo82bNzdMsF7EneOtiiu/ZwCNnaufZ01Jenp6td9XevXq5emw6t2lfj4ahqE5c+aoc+fOatmypWJjY/X55597Jth6cqkcPPjgg9WOjVGjRnkm2HpixXcDjV1dcjBs2LBqx8LkyZM9FLH1XnzxRQ0YMEDBwcHmeeNf//pXc31jOQYowDQyO3bsUHJysnbv3q3s7GzZ7XbFxcWppKTE7DNt2jS99957WrdunXbs2KGvvvpKd955p7k+NzdXISEheu2113To0CH99re/VVpaml544YVq2zt79qweeOABjRgxok7xPfroo3r55Zf19NNP68iRI3r33Xc1ZMiQn77jP5E35+348eO6/fbbdcsttygvL0+bN2/Wf/7zH4dte1JD5y4/P1+nTp0yXyEhIU5jKy4uVlxcnLp27arc3Fw99dRTSk9P10svvWRtEtzgzXnbtWuXBgwYoD//+c86cOCAEhMT9cADD2jDhg3WJsEN3py3Kna7XePGjdNNN91kzU4DcGrt2rVKTU3V3Llz9cknn2jgwIGKj4/X6dOna+xfXl6ukSNH6sSJE3rrrbeUn5+vP/7xj7r88ssbOHLPcjVva9as0axZszR37lx99tlneuWVV7R27Vo99thjDRy5Z5WUlGjgwIHKzMysU//jx48rISFBw4cPV15enqZOnaqHH3642RUTXM3bzp07NXLkSGVlZSk3N1fDhw/Xbbfdpv3799dzpN7F1bxVcfX3M6Axc/XzrCnq27evw+8rH330kadDqneX+vm4aNEiPffcc1q+fLn27NmjVq1aKT4+vkn9x5G6fEaMGjXK4dh4/fXXGzDC+mfFdwONXV1yIEmTJk1yOBa85T8mW6FLly5auHChcnNztW/fPt1yyy26/fbbdejQIUmN6Bgw0KidPn3akGTs2LHDMAzDOHv2rOHv72+sW7fO7PPZZ58ZkoycnByn8zzyyCPG8OHDq7Xfc889xuzZs425c+caAwcOrDWWw4cP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Xbt2kuSwv3V1qbmqtv3j+AICAnTllVdWi80Vzv7tAQAAAAAAADRuFGAAL1DTFRAffvihfv7znyswMFDLli1TVlaWsrOzNX78eBmGUa2/n59fjXNf3Pfuu+/WF198oeeff17h4eF66qmn1LdvX/31r3+VJFVUVGjkyJHauHGjZs6cqfXr1ys7O1srV66UdOHWXN6iLvvribmcXQFUUVFRYztXvwAAAAAAAABNE8+AARqIq7fm+vOf/6zAwEBt3rxZNpvNbF+xYsVPiqNz58565JFH9Mgjj+j06dMaPHiwnnjiCY0ePVqffvqp/vGPf2jVqlV64IEHzDHZ2dkOc1x55ZWSpIMHD9a6LVf2uWvXrsrPz6/WfuTIEXO9p1RtOz8/39x3SSovL9fx48cVGxtrtrVr105nz56tNseXX37pMBYAAAAAAABA08YVMEADadWqlSTV+OV8Tfz8/OTj4+Nw5cSJEye0fv16t7ZfUVFR7dZlISEhCg8PV1lZmblNyfHKD8MwtHTpUodxnTp10tChQ/Xqq6/q5MmTDusuHuvKPt96663au3evcnJyzLaSkhK99NJL6tatW43PyGkosbGxCggI0HPPPeewf6+88oqKioqUkJBgtnXv3l27d+9WeXm52bZhwwb985//bNCYAQAAAAAAAHgWV8AADSQqKkqS9Nvf/lb33nuv/P39ddtttzntn5CQoMWLF2vUqFEaP368Tp8+rczMTPXo0UMHDhxwefvfffedunTpol/84hcaOHCgLrvsMr3//vv6+OOP9cwzz0iSevXqpe7du+s3v/mN/v3vfys4OFh//vOfa3yuynPPPacbb7xRgwcPVlJSkiIjI3XixAlt3LhReXl5te5zVWHmYrNmzdLrr7+u0aNH69e//rXat2+vVatW6fjx4/rzn/8sX1/P1Ys7deqktLQ0ZWRkaNSoUfr5z3+u/Px8LVu2TNdee61++ctfmn0ffvhhvfXWWxo1apTuvvtuHTt2TK+99pq6d+/usfgBAAAAAAAANDwKMEADufbaazV//nwtX75cmzZtUmVlpY4fP+60/y233KJXXnlFCxcu1NSpUxUZGaknn3xSJ06ccKsAExQUpEceeURbtmzR22+/rcrKSvXo0UPLli3TlClTJEn+/v5677339Otf/1oLFixQYGCg7rjjDqWkpGjgwIEO8w0cOFC7d+/W448/rhdffFHnzp1T165ddffdd19yn2sqwISGhmrXrl2aOXOmnn/+eZ07d04DBgzQe++953CFiaekp6erU6dOeuGFFzRt2jS1b99eSUlJ+v3vfy9/f3+zX3x8vJ555hktXrxYU6dO1TXXXKMNGzbof//3fz0YPQAAAAAAAICG5mO485RpAAAAAAAAAAAAOMUzYAAAAAAAAAAAACzGLcgANDk//PCDioqKau3Tvn17BQQENFBEAAAAAAAAAJobCjAAmpy1a9cqMTGx1j4ffPCBhg0b1jABAQAAAAAAAGh2eAYMgCbn1KlTOnToUK19oqKi1K5duwaKCAAAAAAAAEBzQwEGAAAAAAAAAADAYr6eDgAAAAAAAAAAAKCp4RkwtaisrNRXX32l1q1by8fHx9PhAABwSYZh6LvvvlN4eLh8ffl/FgAAAAAAAJ5CAaYWX331lSIiIjwdBgAALvvnP/+pLl26eDoMAAAAAACAZosCTC1at24t6cKXWMHBwT95Prvdri1btiguLk7+/v4/eT6Q0/pATq1HTq1HTp0rLi5WRESE+RkGAAAAAAAAz6AAU4uq244FBwdbVoAJCgpScHAwXxhahJxaj5xaj5xaj5xeGrfOBAAAAAAA8CxuDg8AAAAAAAAAAGAxCjAAAAAAAAAAAAAWowADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGAxCjAAAAAAAAAAAAAWa+HpAAAA3qnbrI1O151YmNCAkQAAAAAAAACND1fAAAAAAAAAAAAAWIwCDAAAAAAAAAAAgMUowAAAAAAAAAAAAFiMAgwAAAAAAAAAAIDFKMAAAAAAAAAAAABYzKUCzIIFC3TttdeqdevWCgkJ0ZgxY5Sfn+/QZ9iwYfLx8XF4TZ482aHPyZMnlZCQoKCgIIWEhGj69Ok6f/68Q5/t27dr8ODBstls6tGjh1auXFktnszMTHXr1k2BgYGKjo7W3r17HdafO3dOycnJ6tChgy677DKNHTtWhYWFruwyAAAAAAAAAACAy1wqwOzYsUPJycnavXu3srOzZbfbFRcXp5KSEod+kyZN0qlTp8zXokWLzHUVFRVKSEhQeXm5du3apVWrVmnlypWaM2eO2ef48eNKSEjQ8OHDlZeXp6lTp+rhhx/W5s2bzT5r165Vamqq5s6dq08++UQDBw5UfHy8Tp8+bfaZNm2a3nvvPa1bt047duzQV199pTvvvNPlJAEAAAAAAAAAALiihSudN23a5LC8cuVKhYSEKDc3V0OHDjXbg4KCFBYWVuMcW7Zs0eHDh/X+++8rNDRUgwYN0vz58zVz5kylp6crICBAy5cvV2RkpJ555hlJUu/evfXRRx9pyZIlio+PlyQtXrxYkyZNUmJioiRp+fLl2rhxo1599VXNmjVLRUVFeuWVV7RmzRrdcsstkqQVK1aod+/e2r17t6677jpXdh0AAAAAAAAAAKDOXCrA/FhRUZEkqX379g7tq1ev1muvvaawsDDddtttevzxxxUUFCRJysnJUf/+/RUaGmr2j4+P15QpU3To0CH97Gc/U05OjmJjYx3mjI+P19SpUyVJ5eXlys3NVVpamrne19dXsbGxysnJkSTl5ubKbrc7zNOrVy9dccUVysnJqbEAU1ZWprKyMnO5uLhYkmS322W3213Oz49VzWHFXLiAnFqPnFqvsebU5mc4XefpfWmsOW0I5AQAAAAAAMA7uF2Aqays1NSpU3XDDTeoX79+Zvv48ePVtWtXhYeH68CBA5o5c6by8/P19ttvS5IKCgocii+SzOWCgoJa+xQXF+uHH37QmTNnVFFRUWOfI0eOmHMEBASobdu21fpUbefHFixYoIyMjGrtW7ZsMQtIVsjOzrZsLlxATq1HTq3X2HK6aIjzdVlZWQ0XSC0aW04bQmlpqadDAAAAAAAAgH5CASY5OVkHDx7URx995NCelJRk/r1///7q3LmzRowYoWPHjql79+7uR9oA0tLSlJqaai4XFxcrIiJCcXFxCg4O/snz2+12ZWdna+TIkfL39//J84Gc1gdyaj1vyGm/9M01th9Mj3d5zKXGNQRvyKm3qrp6EwAAAAAAAJ7lVgEmJSVFGzZs0M6dO9WlS5da+0ZHR0uSjh49qu7duyssLEx79+516FNYWChJ5nNjwsLCzLaL+wQHB6tly5by8/OTn59fjX0unqO8vFxnz551uArm4j4/ZrPZZLPZqrX7+/tb+gWf1fOBnNYHcmo9T+a0rMKnxvba4nE25lLjGhLHaXXkAwAAAAAAwDv4utLZMAylpKTonXfe0bZt2xQZGXnJMXl5eZKkzp07S5JiYmL06aef6vTp02af7OxsBQcHq0+fPmafrVu3OsyTnZ2tmJgYSVJAQICioqIc+lRWVmrr1q1mn6ioKPn7+zv0yc/P18mTJ80+AAAAAAAAAAAA9cGlK2CSk5O1Zs0a/eUvf1Hr1q3NZ6m0adNGLVu21LFjx7RmzRrdeuut6tChgw4cOKBp06Zp6NChGjBggCQpLi5Offr00f33369FixapoKBAs2fPVnJysnn1yeTJk/XCCy9oxowZeuihh7Rt2za9+eab2rhxoxlLamqqJkyYoGuuuUZDhgzRs88+q5KSEiUmJpoxTZw4UampqWrfvr2Cg4P1q1/9SjExMbruuussSR4AAAAAAAAAAEBNXCrAvPjii5KkYcOGObSvWLFCDz74oAICAvT++++bxZCIiAiNHTtWs2fPNvv6+flpw4YNmjJlimJiYtSqVStNmDBB8+bNM/tERkZq48aNmjZtmpYuXaouXbro5ZdfVnz8f585cM899+jrr7/WnDlzVFBQoEGDBmnTpk0KDQ01+yxZskS+vr4aO3asysrKFB8fr2XLlrmUIAAAAAAAAAAAAFe5VIAxDKPW9REREdqxY8cl5+natauysrJq7TNs2DDt37+/1j4pKSlKSUlxuj4wMFCZmZnKzMy8ZEwAAAAAAAAAAABWcekZMAAAAAAAAAAAALg0CjAAAAAAAAAAAAAWowADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGAxCjAAAAAAAAAAAAAWowADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGAxCjAAAAAAAAAAAAAWowADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABZr4ekAAADNQ7dZG2tsP7EwoYEjAQAAAAAAAOofV8AAAAAAAAAAAABYjAIMAAAAAAAAAACAxSjAAAAAAAAAAAAAWIxnwACAF3L2vBSJZ6YAAAAAAAAAjQFXwAAAAAAAAAAAAFiMK2AAoJ71S9+sRUMu/FlW4eOwjqtZAAAAAAAAgKaJK2AAAAAAAAAAAAAsRgEGAAAAAAAAAADAYi4VYBYsWKBrr71WrVu3VkhIiMaMGaP8/HyHPufOnVNycrI6dOigyy67TGPHjlVhYaFDn5MnTyohIUFBQUEKCQnR9OnTdf78eYc+27dv1+DBg2Wz2dSjRw+tXLmyWjyZmZnq1q2bAgMDFR0drb1797ocCwAAAAAAAAAAgNVcKsDs2LFDycnJ2r17t7Kzs2W32xUXF6eSkhKzz7Rp0/Tee+9p3bp12rFjh7766ivdeeed5vqKigolJCSovLxcu3bt0qpVq7Ry5UrNmTPH7HP8+HElJCRo+PDhysvL09SpU/Xwww9r8+bNZp+1a9cqNTVVc+fO1SeffKKBAwcqPj5ep0+frnMsAAAAAAAAAAAA9aGFK503bdrksLxy5UqFhIQoNzdXQ4cOVVFRkV555RWtWbNGt9xyiyRpxYoV6t27t3bv3q3rrrtOW7Zs0eHDh/X+++8rNDRUgwYN0vz58zVz5kylp6crICBAy5cvV2RkpJ555hlJUu/evfXRRx9pyZIlio+PlyQtXrxYkyZNUmJioiRp+fLl2rhxo1599VXNmjWrTrEAAAAAAAAAAADUB5cKMD9WVFQkSWrfvr0kKTc3V3a7XbGxsWafXr166YorrlBOTo6uu+465eTkqH///goNDTX7xMfHa8qUKTp06JB+9rOfKScnx2GOqj5Tp06VJJWXlys3N1dpaWnmel9fX8XGxionJ6fOsQAAmo9uszY6XXdiYUIDRgIAAAAAAIDmwO0CTGVlpaZOnaobbrhB/fr1kyQVFBQoICBAbdu2degbGhqqgoICs8/FxZeq9VXrautTXFysH374QWfOnFFFRUWNfY4cOVLnWH6srKxMZWVl5nJxcbEkyW63y26315qPuqiaw4q5cAE5tR45tZ7N13D482LO8mzzq973UmNqjcHJfLXN5Q0xXGr7roy1en+8VVPaFwAAAAAAgMbM7QJMcnKyDh48qI8++sjKeDxqwYIFysjIqNa+ZcsWBQUFWbad7Oxsy+bCBeTUeuTUOvOvqfqzstq6rKysGscsGuJ8PmdjauNsvtrm8oYYLsWV49Tq/fFWpaWlng4BAAAAAAAAcrMAk5KSog0bNmjnzp3q0qWL2R4WFqby8nKdPXvW4cqTwsJChYWFmX327t3rMF9hYaG5rurPqraL+wQHB6tly5by8/OTn59fjX0unuNSsfxYWlqaUlNTzeXi4mJFREQoLi5OwcHBdUlNrex2u7KzszVy5Ej5+/v/5PlATusDOb2gX/rmGtsPpse7PFfUvE2af02lHt/nq7JKnzrN52z77sbgzv54QwzOuHOcWr0/3qrq6k0AAAAAAAB4lksFGMMw9Ktf/UrvvPOOtm/frsjISIf1UVFR8vf319atWzV27FhJUn5+vk6ePKmYmBhJUkxMjJ544gmdPn1aISEhki78D+bg4GD16dPH7PPj/42cnZ1tzhEQEKCoqCht3bpVY8aMkXThlmhbt25VSkpKnWP5MZvNJpvNVq3d39/f0i+irZ4P5LQ+NPecllX41NjuTk6qii5llT7V5nU2n7Ptux2DG/vjDTFciivHqdX7462a0r4AAAAAAAA0Zi4VYJKTk7VmzRr95S9/UevWrc1nqbRp00YtW7ZUmzZtNHHiRKWmpqp9+/YKDg7Wr371K8XExJgPvY+Li1OfPn10//33a9GiRSooKNDs2bOVnJxsFj8mT56sF154QTNmzNBDDz2kbdu26c0339TGjf99gHJqaqomTJiga665RkOGDNGzzz6rkpISJSYmmjFdKhYAAAAAAAAAAID64FIB5sUXX5QkDRs2zKF9xYoVevDBByVJS5Yska+vr8aOHauysjLFx8dr2bJlZl8/Pz9t2LBBU6ZMUUxMjFq1aqUJEyZo3rx5Zp/IyEht3LhR06ZN09KlS9WlSxe9/PLLio//7y1i7rnnHn399deaM2eOCgoKNGjQIG3atEmhoaFmn0vFAgAAAAAAAAAAUB9cvgXZpQQGBiozM1OZmZlO+3Tt2vWSDzweNmyY9u/fX2uflJQU85Zj7sYCAAAAAAAAAABgNZcKMAAAeIN+6Zu1aMiFP3/8bJcTCxM8FBUAAAAAAADwX76eDgAAAAAAAAAAAKCpoQADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGCxFp4OAACs0G3WRqfrTixMaMBIAAAAAAAAAIArYAAAAAAAAAAAACxHAQYAAAAAAAAAAMBi3IIMAAA3OLvtHbe8AwAAAAAAgMQVMAAAAAAAAAAAAJajAAMAAAAAAAAAAGAxCjAAAAAAAAAAAAAWowADAAAAAAAAAABgsRaeDgAAfszZw80lHnAOAAAAAAAAoHHgChgAAAAAAAAAAACLUYABAAAAAAAAAACwGAUYAAAAAAAAAAAAi1GAAQAAAAAAAAAAsBgFGAAAAAAAAAAAAItRgAEAAAAAAAAAALAYBRgAAAAAAAAAAACLUYABAAAAAAAAAACwGAUYAAAAAAAAAAAAi1GAAQAAAAAAAAAAsBgFGAAAAAAAAAAAAIu18HQAAJqGbrM21th+YmFCA0cCAAAAAAAAAJ7n8hUwO3fu1G233abw8HD5+Pho/fr1DusffPBB+fj4OLxGjRrl0Ofbb7/Vfffdp+DgYLVt21YTJ07U999/79DnwIEDuummmxQYGKiIiAgtWrSoWizr1q1Tr169FBgYqP79+ysrK8thvWEYmjNnjjp37qyWLVsqNjZWn3/+uau7DAAAAAAAAAAA4BKXCzAlJSUaOHCgMjMznfYZNWqUTp06Zb5ef/11h/X33XefDh06pOzsbG3YsEE7d+5UUlKSub64uFhxcXHq2rWrcnNz9dRTTyk9PV0vvfSS2WfXrl0aN26cJk6cqP3792vMmDEaM2aMDh48aPZZtGiRnnvuOS1fvlx79uxRq1atFB8fr3Pnzrm62wAAAAAAAAAAAHXm8i3IRo8erdGjR9fax2azKSwsrMZ1n332mTZt2qSPP/5Y11xzjSTp+eef16233qqnn35a4eHhWr16tcrLy/Xqq68qICBAffv2VV5enhYvXmwWapYuXapRo0Zp+vTpkqT58+crOztbL7zwgpYvXy7DMPTss89q9uzZuv322yVJf/rTnxQaGqr169fr3nvvdXXXAQAAAAAAAAAA6qRengGzfft2hYSEqF27drrlllv0u9/9Th06dJAk5eTkqG3btmbxRZJiY2Pl6+urPXv26I477lBOTo6GDh2qgIAAs098fLyefPJJnTlzRu3atVNOTo5SU1MdthsfH2/eEu348eMqKChQbGysub5NmzaKjo5WTk5OjQWYsrIylZWVmcvFxcWSJLvdLrvd/pPzUjWHFXPhAnJqPXdzavMzap3Pirlqm8+dMe7E4NZcvobDn3WZzxv2xxticDpXI81pQ/D09gEAAAAAAHCBj2EYzr+RutRgHx+98847GjNmjNn2xhtvKCgoSJGRkTp27Jgee+wxXXbZZcrJyZGfn59+//vfa9WqVcrPz3eYKyQkRBkZGZoyZYri4uIUGRmpP/zhD+b6w4cPq2/fvjp8+LB69+6tgIAArVq1SuPGjTP7LFu2TBkZGSosLNSuXbt0ww036KuvvlLnzp3NPnfffbd8fHy0du3aavuTnp6ujIyMau1r1qxRUFCQu2kCAKDBlJaWavz48SoqKlJwcLCnwwEAAAAAAGi2LL8C5uIrS/r3768BAwaoe/fu2r59u0aMGGH15iyVlpbmcFVNcXGxIiIiFBcXZ8mXWHa7XdnZ2Ro5cqT8/f1/8nwgp/XB3Zz2S99cY/vB9HiXY3A2V23zuTPGnRjcmStq3ibNv6ZSj+/zVVmlT53m84b98YYYnGmsOW0IVVdvAgAAAAAAwLPq5RZkF7vyyivVsWNHHT16VCNGjFBYWJhOnz7t0Of8+fP69ttvzefGhIWFqbCw0KFP1fKl+ly8vqrt4itgCgsLNWjQoBpjtdlsstls1dr9/f0t/XLf6vlATuuDqzktq/Cpsd2dfxdnc9U2nztj3InBrbn+/wJBWaVPtXm9eX+8IQanczXSnDYET28fAAAAAAAAF/jW9wb+9a9/6ZtvvjGLIDExMTp79qxyc3PNPtu2bVNlZaWio6PNPjt37nS4j312drZ69uypdu3amX22bt3qsK3s7GzFxMRIkiIjIxUWFubQp7i4WHv27DH7AAAAAAAAAAAA1AeXr4D5/vvvdfToUXP5+PHjysvLU/v27dW+fXtlZGRo7NixCgsL07FjxzRjxgz16NFD8fEXbsnSu3dvjRo1SpMmTdLy5ctlt9uVkpKie++9V+Hh4ZKk8ePHKyMjQxMnTtTMmTN18OBBLV26VEuWLDG3++ijj+rmm2/WM888o4SEBL3xxhvat2+fXnrpJUkXnk8zdepU/e53v9NVV12lyMhIPf744woPD3d4Zg2AmvVL31ztf/ifWJjgoWgAAAAAAAAAoHFxuQCzb98+DR8+3FyuembKhAkT9OKLL+rAgQNatWqVzp49q/DwcMXFxWn+/PkOt/ZavXq1UlJSNGLECPn6+mrs2LF67rnnzPVt2rTRli1blJycrKioKHXs2FFz5sxRUlKS2ef666/XmjVrNHv2bD322GO66qqrtH79evXr18/sM2PGDJWUlCgpKUlnz57VjTfeqE2bNikwMNDV3QYAAAAAAAAAAKgzlwsww4YNk2EYTtdv3uz8IcdV2rdvrzVr1tTaZ8CAAfrwww9r7XPXXXfprrvucrrex8dH8+bN07x58y4ZEwAAAAAAAAAAgFVcLsAA8D7dZm2ssZ1bhgEAAAAAAACAZ1CAATzAWcFEomgCAAAAAAAAAE2Br6cDAAAAAAAAAAAAaGoowAAAAAAAAAAAAFiMAgwAAAAAAAAAAIDFKMAAAAAAAAAAAABYrIWnAwAAoLnoNmtjje0nFiY0cCQAAAAAAACob1wBAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGAxCjAAAAAAAAAAAAAWowADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGAxCjAAAAAAAAAAAAAWowADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGAxCjAAAAAAAAAAAAAWowADAAAAAAAAAABgMQowAAAAAAAAAAAAFqMAAwAAAAAAAAAAYDEKMAAAAAAAAAAAABajAAMAAAAAAAAAAGAxlwswO3fu1G233abw8HD5+Pho/fr1DusNw9CcOXPUuXNntWzZUrGxsfr8888d+nz77be67777FBwcrLZt22rixIn6/vvvHfocOHBAN910kwIDAxUREaFFixZVi2XdunXq1auXAgMD1b9/f2VlZbkcCwAAAAAAAAAAgNVcLsCUlJRo4MCByszMrHH9okWL9Nxzz2n58uXas2ePWrVqpfj4eJ07d87sc9999+nQoUPKzs7Whg0btHPnTiUlJZnri4uLFRcXp65duyo3N1dPPfWU0tPT9dJLL5l9du3apXHjxmnixInav3+/xowZozFjxujgwYMuxQIAAAAAAAAAAGC1Fq4OGD16tEaPHl3jOsMw9Oyzz2r27Nm6/fbbJUl/+tOfFBoaqvXr1+vee+/VZ599pk2bNunjjz/WNddcI0l6/vnndeutt+rpp59WeHi4Vq9erfLycr366qsKCAhQ3759lZeXp8WLF5uFmqVLl2rUqFGaPn26JGn+/PnKzs7WCy+8oOXLl9cpFgAAAAAAAAAAgPrgcgGmNsePH1dBQYFiY2PNtjZt2ig6Olo5OTm69957lZOTo7Zt25rFF0mKjY2Vr6+v9uzZozvuuEM5OTkaOnSoAgICzD7x8fF68skndebMGbVr1045OTlKTU112H58fLx5S7S6xPJjZWVlKisrM5eLi4slSXa7XXa7/acl5/+f5+I/8dN5Q077pW92uu5genyN7TY/w+kYd/bF2XzuzFU1xuZbfc7a5rMyBnfy4805rcqlKzn1hv3xhhicztXEcmrlzzA+YwAAAAAAALyDj2EYzr+RutRgHx+98847GjNmjKQLtwW74YYb9NVXX6lz585mv7vvvls+Pj5au3atfv/732vVqlXKz893mCskJEQZGRmaMmWK4uLiFBkZqT/84Q/m+sOHD6tv3746fPiwevfurYCAAK1atUrjxo0z+yxbtkwZGRkqLCysUyw/lp6eroyMjGrta9asUVBQkLtpAgCgwZSWlmr8+PEqKipScHCwp8MBAAAAAABotiy9AqaxS0tLc7iqpri4WBEREYqLi7PkSyy73a7s7GyNHDlS/v7+P3k+eEdO3bkCxp0x7sTgzlxVOX18n6/KKn3qPJ+VMTS1nEbN26T511S6lFNv2B9viMGZppZTd7bvTNXVmwAAAAAAAPAsSwswYWFhkqTCwkKHq04KCws1aNAgs8/p06cdxp0/f17ffvutOT4sLEyFhYUOfaqWL9Xn4vWXiuXHbDabbDZbtXZ/f39Lv9y3ej54NqdlFT5O1zmLyZ0x7sTwU3JSVulTbd7a5rMyhqaW06oCgSs59Yb98YYYnM7VxHJq9WcMAAAAAAAAPM/XyskiIyMVFhamrVu3mm3FxcXas2ePYmJiJEkxMTE6e/ascnNzzT7btm1TZWWloqOjzT47d+50uI99dna2evbsqXbt2pl9Lt5OVZ+q7dQlFgAAAAAAAAAAgPrgcgHm+++/V15envLy8iRdeNh9Xl6eTp48KR8fH02dOlW/+93v9O677+rTTz/VAw88oPDwcPM5Mb1799aoUaM0adIk7d27V3/729+UkpKie++9V+Hh4ZKk8ePHKyAgQBMnTtShQ4e0du1aLV261OH2YI8++qg2bdqkZ555RkeOHFF6err27dunlJQUSapTLAAAAAAAAAAAAPXB5VuQ7du3T8OHDzeXq4oiEyZM0MqVKzVjxgyVlJQoKSlJZ8+e1Y033qhNmzYpMDDQHLN69WqlpKRoxIgR8vX11dixY/Xcc8+Z69u0aaMtW7YoOTlZUVFR6tixo+bMmaOkpCSzz/XXX681a9Zo9uzZeuyxx3TVVVdp/fr16tevn9mnLrEAAAAAAAAAAABYzeUCzLBhw2QYhtP1Pj4+mjdvnubNm+e0T/v27bVmzZpatzNgwAB9+OGHtfa56667dNddd/2kWAAAAAAAAAAAAKzmcgEGP12/9M3VHsR8YmGCh6IBAAAAAAAAAABWc/kZMAAAAAAAAAAAAKgdBRgAAAAAAAAAAACLUYABAAAAAAAAAACwGAUYAAAAAAAAAAAAi1GAAQAAAAAAAAAAsBgFGAAAAAAAAAAAAItRgAEAAAAAAAAAALAYBRgAAAAAAAAAAACLUYABAAAAAAAAAACwGAUYAAAAAAAAAAAAi1GAAQAAAAAAAAAAsBgFGAAAAAAAAAAAAItRgAEAAAAAAAAAALAYBRgAAAAAAAAAAACLUYABAAAAAAAAAACwGAUYAAAAAAAAAAAAi1GAAQAAAAAAAAAAsBgFGAAAAAAAAAAAAItRgAEAAAAAAAAAALAYBRgAAAAAAAAAAACLUYABAAAAAAAAAACwWAtPB4BL6zZrY43tJxYmNHAkAAAAAAAAAACgLrgCBgAAAAAAAAAAwGIUYAAAAAAAAAAAACxGAQYAAAAAAAAAAMBiFGAAAAAAAAAAAAAsZnkBJj09XT4+Pg6vXr16mevPnTun5ORkdejQQZdddpnGjh2rwsJChzlOnjyphIQEBQUFKSQkRNOnT9f58+cd+mzfvl2DBw+WzWZTjx49tHLlymqxZGZmqlu3bgoMDFR0dLT27t1r9e4CAAAAAAAAAABUUy9XwPTt21enTp0yXx999JG5btq0aXrvvfe0bt067dixQ1999ZXuvPNOc31FRYUSEhJUXl6uXbt2adWqVVq5cqXmzJlj9jl+/LgSEhI0fPhw5eXlaerUqXr44Ye1efNms8/atWuVmpqquXPn6pNPPtHAgQMVHx+v06dP18cuAwAAAAAAAAAAmOqlANOiRQuFhYWZr44dO0qSioqK9Morr2jx4sW65ZZbFBUVpRUrVmjXrl3avXu3JGnLli06fPiwXnvtNQ0aNEijR4/W/PnzlZmZqfLycknS8uXLFRkZqWeeeUa9e/dWSkqKfvGLX2jJkiVmDIsXL9akSZOUmJioPn36aPny5QoKCtKrr75aH7sMAAAAAAAAAABgqpcCzOeff67w8HBdeeWVuu+++3Ty5ElJUm5urux2u2JjY82+vXr10hVXXKGcnBxJUk5Ojvr376/Q0FCzT3x8vIqLi3Xo0CGzz8VzVPWpmqO8vFy5ubkOfXx9fRUbG2v2AQAAAAAAAAAAqC8trJ4wOjpaK1euVM+ePXXq1CllZGTopptu0sGDB1VQUKCAgAC1bdvWYUxoaKgKCgokSQUFBQ7Fl6r1Vetq61NcXKwffvhBZ86cUUVFRY19jhw54jT2srIylZWVmcvFxcWSJLvdLrvd7kIWalY1h83XcLquJja/6v0vNaa5qMqBJ3Ph7N9Hch6XO2PcicGdubzhOG1qOa3KpSs59Yb98YYYnM7VxHJq5c8wPhsAAAAAAAC8g49hGM6/kbLA2bNn1bVrVy1evFgtW7ZUYmKiQ5FDkoYMGaLhw4frySefVFJSkr788kuH57mUlpaqVatWysrK0ujRo3X11VcrMTFRaWlpZp+srCwlJCSotLRUZ86c0eWXX65du3YpJibG7DNjxgzt2LFDe/bsqTHW9PR0ZWRkVGtfs2aNgoKCfmoqAACod6WlpRo/fryKiooUHBzs6XAAAAAAAACaLcuvgPmxtm3b6uqrr9bRo0c1cuRIlZeX6+zZsw5XwRQWFiosLEySFBYWpr179zrMUVhYaK6r+rOq7eI+wcHBatmypfz8/OTn51djn6o5apKWlqbU1FRzubi4WBEREYqLi7PkSyy73a7s7Gw9vs9XZZU+DusOpsc7HdcvfXON7bWNaS6qcjpy5Ej5+/vXeZyVOXU2V23zuTPGnRjcmcsbjtOmltOoeZs0/5pKl3LqDfvjDTE409RyauXP86qrNwEAAAAAAOBZ9V6A+f7773Xs2DHdf//9ioqKkr+/v7Zu3aqxY8dKkvLz83Xy5EnzSpWYmBg98cQTOn36tEJCQiRJ2dnZCg4OVp8+fcw+WVlZDtvJzs425wgICFBUVJS2bt2qMWPGSJIqKyu1detWpaSkOI3VZrPJZrNVa/f393fpy/1LKav0UVmF4xeGtc3/4751GdPcuPpvZGVOnc1V23zujHEnhp9yjHjyOG1qOa0qELiSU2/YH2+IwelcTSynVv4857MBAAAAAADAO/haPeFvfvMb7dixQydOnNCuXbt0xx13yM/PT+PGjVObNm00ceJEpaam6oMPPlBubq4SExMVExOj6667TpIUFxenPn366P7779ff//53bd68WbNnz1ZycrJZHJk8ebK++OILzZgxQ0eOHNGyZcv05ptvatq0aWYcqamp+uMf/6hVq1bps88+05QpU1RSUqLExESrdxkAAAAAAAAAAMCB5VfA/Otf/9K4ceP0zTffqFOnTrrxxhu1e/duderUSZK0ZMkS+fr6auzYsSorK1N8fLyWLVtmjvfz89OGDRs0ZcoUxcTEqFWrVpowYYLmzZtn9omMjNTGjRs1bdo0LV26VF26dNHLL7+s+Pj/3sLlnnvu0ddff605c+aooKBAgwYN0qZNmxQaGmr1LgMAAAAAAAAAADiwvADzxhtv1Lo+MDBQmZmZyszMdNqna9eu1W4x9mPDhg3T/v37a+2TkpJS6y3HmqtuszbW2H5iYUIDRwIAAAAAAAAAQNNk+S3IAAAAAAAAAAAAmjsKMAAAAAAAAAAAABajAAMAAAAAAP6/9u4txMp67wP4b6l5qHRkPMw4ebbMTip4WEoWRIOjbIQhg4wuVKSLGAUbRfQiZ6Sit4IQ8UQXJV0o1oVGBW5iypHIFDQvukhMfNGwGW1kRh1xnNdZ+yL2sNfrYZc9+riWnw8MzPzXsx6+8+PPXMyX/3oAAEiYAgYAAAAAACBhChgAAAAAAICEKWAAAAAAAAASpoABAAAAAABImAIGAAAAAAAgYQoYAAAAAACAhClgAAAAAAAAEqaAAQAAAAAASFivtANQGEav/uq66//7P/+4w0kAAAAAAODu5wQMAAAAAABAwhQwAAAAAAAACVPAAAAAAAAAJMwzYCgKT9b/MzquZvLWPJ8GAAAAAIC0OAEDAAAAAACQMCdguONGr/7qhq85tQIAAAAAQDFwAgYAAAAAACBhChgAAAAAAICEKWAAAAAAAAASpoABAAAAAABImAIGAAAAAAAgYQoYAAAAAACAhClgAAAAAAAAEqaAAQAAAAAASJgCBgAAAAAAIGEKGAAAAAAAgITdEwXMpk2bYvTo0dG3b9/IZrNx8ODBtCMBAAAAAABFrOgLmJ07d0ZtbW3U1dXF4cOHY9KkSVFVVRVnzpxJOxoAAAAAAFCkir6A+eCDD+LVV1+NxYsXx+OPPx5bt26N+++/Pz766KO0owEAAAAAAEWqV9oBbqcrV67EoUOHYs2aNd1rPXr0iMrKyti/f/8113d0dERHR0f3z21tbRERce7cuejs7PzbeTo7O+PSpUvRq7NHXO3K5L3W0tJyw/f1+r/2667f7D03cyv3SzLDje51K/e7G2Z6K79PkjO42f1u5V5mevP73dK9Otvj0qWuvzTTu+H3uRsy3PBeRTbTW/17fj0XLlyIiIhcLpfYPQEAAAD46zK5Iv4PzenTp+Ohhx6K77//PmbOnNm9vmrVqmhsbIwDBw7kXV9fXx/r1q270zEBIHGnTp2K4cOHpx0DAAAA4J5V1Cdg/qo1a9ZEbW1t989dXV1x7ty5GDRoUGQymZu88885f/58jBgxIk6dOhUDBgz42/fDTG8HM02emSbPTG8sl8vFhQsXoqKiIu0oAAAAAPe0oi5gBg8eHD179ozm5ua89ebm5igvL7/m+j59+kSfPn3y1gYOHJh4rgEDBviHYcLMNHlmmjwzTZ6ZXl9JSUnaEQAAAADueT3SDnA79e7dO6ZMmRINDQ3da11dXdHQ0JD3kWQAAAAAAABJKuoTMBERtbW1sXDhwpg6dWpMnz491q9fH+3t7bF48eK0owEAAAAAAEWq6AuYl156Kc6ePRtr166NpqammDx5cuzZsyfKysrueJY+ffpEXV3dNR9zxq0z0+SZafLMNHlmCgAAAMDdLpPL5XJphwAAAAAAACgmRf0MGAAAAAAAgDQoYAAAAAAAABKmgAEAAAAAAEiYAgYAAAAAACBhCpg7ZNOmTTF69Ojo27dvZLPZOHjwYNqRClp9fX1kMpm8rwkTJqQdq6Ds27cv5s2bFxUVFZHJZGL37t15r+dyuVi7dm0MGzYs+vXrF5WVlXHs2LF0whaI/zbTRYsWXbNv58yZk07YAvHOO+/EtGnTon///jF06NCorq6Oo0eP5l1z+fLlqKmpiUGDBsWDDz4Y8+fPj+bm5pQSAwAAAMAfFDB3wM6dO6O2tjbq6uri8OHDMWnSpKiqqoozZ86kHa2gPfHEE/Hbb791f3333XdpRyoo7e3tMWnSpNi0adN1X3/vvfdiw4YNsXXr1jhw4EA88MADUVVVFZcvX77DSQvHf5tpRMScOXPy9u2OHTvuYMLC09jYGDU1NfHDDz/E119/HZ2dnTF79uxob2/vvub111+PL774Ij777LNobGyM06dPxwsvvJBiagAAAACIyORyuVzaIYpdNpuNadOmxcaNGyMioqurK0aMGBHLli2L1atXp5yuMNXX18fu3bvjyJEjaUcpCplMJnbt2hXV1dUR8cfpl4qKilixYkWsXLkyIiLa2tqirKwstm3bFgsWLEgxbWH4/zON+OMETGtr6zUnY/jzzp49G0OHDo3GxsZ49tlno62tLYYMGRLbt2+PF198MSIifv7553jsscdi//79MWPGjJQTAwAAAHCvcgLmNrty5UocOnQoKisru9d69OgRlZWVsX///hSTFb5jx45FRUVFjB07Nl555ZU4efJk2pGKxokTJ6KpqSlv35aUlEQ2m7Vv/6a9e/fG0KFD49FHH43XXnstWlpa0o5UUNra2iIiorS0NCIiDh06FJ2dnXl7dcKECTFy5Eh7FQAAAIBUKWBus99//z2uXr0aZWVleetlZWXR1NSUUqrCl81mY9u2bbFnz57YsmVLnDhxIp555pm4cOFC2tGKwr/3pn2brDlz5sQnn3wSDQ0N8e6770ZjY2PMnTs3rl69mna0gtDV1RXLly+Pp59+Op588smI+GOv9u7dOwYOHJh3rb0KAAAAQNp6pR0AbsXcuXO7v584cWJks9kYNWpUfPrpp7FkyZIUk8GN/edHtz311FMxceLEGDduXOzduzeef/75FJMVhpqamvjpp5887wkAAACAguAEzG02ePDg6NmzZzQ3N+etNzc3R3l5eUqpis/AgQNj/Pjx8csvv6QdpSj8e2/at7fX2LFjY/Dgwfbtn7B06dL48ssv49tvv43hw4d3r5eXl8eVK1eitbU173p7FQAAAIC0KWBus969e8eUKVOioaGhe62rqysaGhpi5syZKSYrLhcvXozjx4/HsGHD0o5SFMaMGRPl5eV5+/b8+fNx4MAB+zZBv/76a7S0tNi3N5HL5WLp0qWxa9eu+Oabb2LMmDF5r0+ZMiXuu+++vL169OjROHnypL0KAAAAQKp8BNkdUFtbGwsXLoypU6fG9OnTY/369dHe3h6LFy9OO1rBWrlyZcybNy9GjRoVp0+fjrq6uujZs2e8/PLLaUcrGBcvXsw7eXHixIk4cuRIlJaWxsiRI2P58uXx1ltvxSOPPBJjxoyJN954IyoqKqK6ujq90He5m820tLQ01q1bF/Pnz4/y8vI4fvx4rFq1Kh5++OGoqqpKMfXdraamJrZv3x6ff/559O/fv/u5LiUlJdGvX78oKSmJJUuWRG1tbZSWlsaAAQNi2bJlMXPmzJgxY0bK6QEAAAC4l2VyuVwu7RD3go0bN8b7778fTU1NMXny5NiwYUNks9m0YxWsBQsWxL59+6KlpSWGDBkSs2bNirfffjvGjRuXdrSCsXfvIst/RAAAAP1JREFU3njuueeuWV+4cGFs27Ytcrlc1NXVxYcffhitra0xa9as2Lx5c4wfPz6FtIXhZjPdsmVLVFdXx48//hitra1RUVERs2fPjjfffDPKyspSSFsYMpnMddc//vjjWLRoUUREXL58OVasWBE7duyIjo6OqKqqis2bN/sIMgAAAABSpYABAAAAAABImGfAAAAAAAAAJEwBAwAAAAAAkDAFDAAAAAAAQMIUMAAAAAAAAAlTwAAAAAAAACRMAQMAAAAAAJAwBQwAAAAAAEDCFDAAAAAAAAAJU8AAAAAAAAAkTAEDAAAAAACQMAUMAAAAAABAwhQwAAAAAAAACfsXlTNcEYB9cIsAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 2000x1000 with 9 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize distributions after filtering\n",
    "taxi_data_prepared.select_dtypes(include='number').hist(figsize=(20,10), bins=60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "bbc76278",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:16.354816Z",
     "iopub.status.busy": "2025-06-16T10:23:16.353996Z",
     "iopub.status.idle": "2025-06-16T10:23:16.358789Z",
     "shell.execute_reply": "2025-06-16T10:23:16.357780Z"
    },
    "papermill": {
     "duration": 0.031554,
     "end_time": "2025-06-16T10:23:16.360319",
     "exception": false,
     "start_time": "2025-06-16T10:23:16.328765",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Select key columns for aggregation\n",
    "categorical_columns = ['PULocationID','transaction_date','transaction_month','transaction_day','transaction_hour']\n",
    "numerical_columns = ['trip_distance','total_amount']\n",
    "all_needed_columns = categorical_columns + numerical_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "9f122876",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:16.409789Z",
     "iopub.status.busy": "2025-06-16T10:23:16.409247Z",
     "iopub.status.idle": "2025-06-16T10:23:16.573408Z",
     "shell.execute_reply": "2025-06-16T10:23:16.572479Z"
    },
    "papermill": {
     "duration": 0.190544,
     "end_time": "2025-06-16T10:23:16.574848",
     "exception": false,
     "start_time": "2025-06-16T10:23:16.384304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3409690, 7)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>229</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.60</td>\n",
       "      <td>18.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>236</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.50</td>\n",
       "      <td>12.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>141</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.60</td>\n",
       "      <td>12.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>244</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.52</td>\n",
       "      <td>9.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>244</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.66</td>\n",
       "      <td>8.30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0          229       2025-01-01                  1                1   \n",
       "1          236       2025-01-01                  1                1   \n",
       "2          141       2025-01-01                  1                1   \n",
       "3          244       2025-01-01                  1                1   \n",
       "4          244       2025-01-01                  1                1   \n",
       "\n",
       "   transaction_hour  trip_distance  total_amount  \n",
       "0                 0           1.60         18.00  \n",
       "1                 0           0.50         12.12  \n",
       "2                 0           0.60         12.10  \n",
       "3                 0           0.52          9.70  \n",
       "4                 0           0.66          8.30  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "main_taxi_df = taxi_data_prepared[all_needed_columns]\n",
    "print(main_taxi_df.shape)\n",
    "main_taxi_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "4069f47a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:16.625512Z",
     "iopub.status.busy": "2025-06-16T10:23:16.624637Z",
     "iopub.status.idle": "2025-06-16T10:23:18.136338Z",
     "shell.execute_reply": "2025-06-16T10:23:18.135359Z"
    },
    "papermill": {
     "duration": 1.538311,
     "end_time": "2025-06-16T10:23:18.137699",
     "exception": false,
     "start_time": "2025-06-16T10:23:16.599388",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(96566, 8)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>count_of_transactions</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>115.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>132.510</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>106.200</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>56.400</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>2.160000</td>\n",
       "      <td>70.205</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0            1       2025-01-01                  1                1   \n",
       "1            1       2025-01-01                  1                1   \n",
       "2            1       2025-01-01                  1                1   \n",
       "3            1       2025-01-01                  1                1   \n",
       "4            1       2025-01-01                  1                1   \n",
       "\n",
       "   transaction_hour  trip_distance  total_amount  count_of_transactions  \n",
       "0                 6       0.100000       115.000                      1  \n",
       "1                 9       0.000000       132.510                      4  \n",
       "2                12       0.000000       106.200                      2  \n",
       "3                13       1.333333        56.400                      3  \n",
       "4                14       2.160000        70.205                      2  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Group by pickup region + timestamp features to average fares and distance\n",
    "taxi_grouped_by_region = main_taxi_df.groupby(categorical_columns).mean().reset_index()\n",
    "# Add count of transactions per group\n",
    "taxi_grouped_by_region['count_of_transactions'] = main_taxi_df.groupby(categorical_columns).count().reset_index()['total_amount']\n",
    "print(taxi_grouped_by_region.shape)\n",
    "taxi_grouped_by_region.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "b9de34df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:18.189600Z",
     "iopub.status.busy": "2025-06-16T10:23:18.189301Z",
     "iopub.status.idle": "2025-06-16T10:23:18.471396Z",
     "shell.execute_reply": "2025-06-16T10:23:18.470586Z"
    },
    "papermill": {
     "duration": 0.31065,
     "end_time": "2025-06-16T10:23:18.472922",
     "exception": false,
     "start_time": "2025-06-16T10:23:18.162272",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize new aggregated distributions\n",
    "taxi_grouped_by_region['trip_distance'].hist(bins=100, figsize=(10,5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "387e948a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:18.525278Z",
     "iopub.status.busy": "2025-06-16T10:23:18.524481Z",
     "iopub.status.idle": "2025-06-16T10:23:18.827722Z",
     "shell.execute_reply": "2025-06-16T10:23:18.826839Z"
    },
    "papermill": {
     "duration": 0.330558,
     "end_time": "2025-06-16T10:23:18.829098",
     "exception": false,
     "start_time": "2025-06-16T10:23:18.498540",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualize new aggregated distributions\n",
    "taxi_grouped_by_region['total_amount'].hist(bins=100, figsize=(10,5))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7368189",
   "metadata": {
    "papermill": {
     "duration": 0.025725,
     "end_time": "2025-06-16T10:23:18.881355",
     "exception": false,
     "start_time": "2025-06-16T10:23:18.855630",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 5. Benchmark Model – Regression (Decision Tree)\n",
    "\n",
    "As a starting point, we build a simple benchmark model to predict `total_amount` (fare) using a Decision Tree Regressor.\n",
    "\n",
    "### Features used:\n",
    "- `PULocationID`: Pickup location (encoded)\n",
    "- `transaction_month`, `transaction_day`, `transaction_hour`: Time-based features\n",
    "- `trip_distance`: Distance of the ride in miles\n",
    "\n",
    "We one-hot encode the categorical features and evaluate model performance using:\n",
    "\n",
    "- **MAE** (Mean Absolute Error)\n",
    "- **RMSE** (Root Mean Squared Error)\n",
    "- **R² Score** (explained variance)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "c313b231",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:18.932856Z",
     "iopub.status.busy": "2025-06-16T10:23:18.932531Z",
     "iopub.status.idle": "2025-06-16T10:23:18.941287Z",
     "shell.execute_reply": "2025-06-16T10:23:18.940335Z"
    },
    "papermill": {
     "duration": 0.036588,
     "end_time": "2025-06-16T10:23:18.942889",
     "exception": false,
     "start_time": "2025-06-16T10:23:18.906301",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Copy the aggregated dataset for modeling\n",
    "data_for_benchmark_model = taxi_grouped_by_region.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "07112330",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:18.996527Z",
     "iopub.status.busy": "2025-06-16T10:23:18.995826Z",
     "iopub.status.idle": "2025-06-16T10:23:19.008655Z",
     "shell.execute_reply": "2025-06-16T10:23:19.007904Z"
    },
    "papermill": {
     "duration": 0.041685,
     "end_time": "2025-06-16T10:23:19.010162",
     "exception": false,
     "start_time": "2025-06-16T10:23:18.968477",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>count_of_transactions</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>115.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>132.510</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>106.200</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>56.400</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>2.160000</td>\n",
       "      <td>70.205</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96561</th>\n",
       "      <td>98</td>\n",
       "      <td>2025-01-31</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>12</td>\n",
       "      <td>1.100000</td>\n",
       "      <td>9.670</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96562</th>\n",
       "      <td>98</td>\n",
       "      <td>2025-01-31</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>14</td>\n",
       "      <td>10.180000</td>\n",
       "      <td>45.360</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96563</th>\n",
       "      <td>98</td>\n",
       "      <td>2025-01-31</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>15</td>\n",
       "      <td>5.395000</td>\n",
       "      <td>27.015</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96564</th>\n",
       "      <td>98</td>\n",
       "      <td>2025-01-31</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>22</td>\n",
       "      <td>3.440000</td>\n",
       "      <td>16.780</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96565</th>\n",
       "      <td>99</td>\n",
       "      <td>2025-01-11</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>2.800000</td>\n",
       "      <td>15.300</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>96566 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0                1       2025-01-01                  1                1   \n",
       "1                1       2025-01-01                  1                1   \n",
       "2                1       2025-01-01                  1                1   \n",
       "3                1       2025-01-01                  1                1   \n",
       "4                1       2025-01-01                  1                1   \n",
       "...            ...              ...                ...              ...   \n",
       "96561           98       2025-01-31                  1               31   \n",
       "96562           98       2025-01-31                  1               31   \n",
       "96563           98       2025-01-31                  1               31   \n",
       "96564           98       2025-01-31                  1               31   \n",
       "96565           99       2025-01-11                  1               11   \n",
       "\n",
       "       transaction_hour  trip_distance  total_amount  count_of_transactions  \n",
       "0                     6       0.100000       115.000                      1  \n",
       "1                     9       0.000000       132.510                      4  \n",
       "2                    12       0.000000       106.200                      2  \n",
       "3                    13       1.333333        56.400                      3  \n",
       "4                    14       2.160000        70.205                      2  \n",
       "...                 ...            ...           ...                    ...  \n",
       "96561                12       1.100000         9.670                      1  \n",
       "96562                14      10.180000        45.360                      1  \n",
       "96563                15       5.395000        27.015                      2  \n",
       "96564                22       3.440000        16.780                      1  \n",
       "96565                 3       2.800000        15.300                      1  \n",
       "\n",
       "[96566 rows x 8 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_for_benchmark_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "7a22004b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:19.063389Z",
     "iopub.status.busy": "2025-06-16T10:23:19.063055Z",
     "iopub.status.idle": "2025-06-16T10:23:19.067406Z",
     "shell.execute_reply": "2025-06-16T10:23:19.066606Z"
    },
    "papermill": {
     "duration": 0.032971,
     "end_time": "2025-06-16T10:23:19.069022",
     "exception": false,
     "start_time": "2025-06-16T10:23:19.036051",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define features and target\n",
    "categorical_features_benchmark = ['PULocationID','transaction_month','transaction_day','transaction_hour']\n",
    "input_features_benchmark  = categorical_features_benchmark + ['trip_distance']\n",
    "target_feature_benchmark  = 'total_amount'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "e6bde51e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:19.123258Z",
     "iopub.status.busy": "2025-06-16T10:23:19.122942Z",
     "iopub.status.idle": "2025-06-16T10:23:20.688814Z",
     "shell.execute_reply": "2025-06-16T10:23:20.687948Z"
    },
    "papermill": {
     "duration": 1.595143,
     "end_time": "2025-06-16T10:23:20.690505",
     "exception": false,
     "start_time": "2025-06-16T10:23:19.095362",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Prepare input (X) and target (y)\n",
    "X_bench = data_for_benchmark_model[input_features_benchmark]\n",
    "y_bench = data_for_benchmark_model[target_feature_benchmark]\n",
    "\n",
    "# One-hot encode categorical variables\n",
    "X_bench = pd.get_dummies(X_bench)\n",
    "\n",
    "# Train-test split\n",
    "X_train_b, X_test_b, y_train_b, y_test_b = train_test_split(X_bench, y_bench, test_size=0.33, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "5acb366c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:20.745004Z",
     "iopub.status.busy": "2025-06-16T10:23:20.744527Z",
     "iopub.status.idle": "2025-06-16T10:23:22.227635Z",
     "shell.execute_reply": "2025-06-16T10:23:22.226802Z"
    },
    "papermill": {
     "duration": 1.511883,
     "end_time": "2025-06-16T10:23:22.228962",
     "exception": false,
     "start_time": "2025-06-16T10:23:20.717079",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor(max_depth=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(max_depth=10)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeRegressor(max_depth=10)"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fit a Decision Tree Regressor\n",
    "from sklearn.tree import DecisionTreeRegressor \n",
    "\n",
    "tree = DecisionTreeRegressor(max_depth=10)\n",
    "tree.fit(X_train_b, y_train_b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "e710e5bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:22.282208Z",
     "iopub.status.busy": "2025-06-16T10:23:22.281521Z",
     "iopub.status.idle": "2025-06-16T10:23:22.506242Z",
     "shell.execute_reply": "2025-06-16T10:23:22.505203Z"
    },
    "papermill": {
     "duration": 0.253121,
     "end_time": "2025-06-16T10:23:22.507985",
     "exception": false,
     "start_time": "2025-06-16T10:23:22.254864",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean_absolute_error 6.737799567539845\n",
      "mean_squared_error 154.71977643763424\n",
      "root_mean_squared_error 12.438640457768456\n",
      "r2 0.5415278702567331\n"
     ]
    }
   ],
   "source": [
    "model_at_hand = tree\n",
    "\n",
    "y_pred_b = model_at_hand.predict(X_test_b)\n",
    "\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.metrics import r2_score\n",
    "from math import sqrt\n",
    "\n",
    "# Evaluate performance\n",
    "print('mean_absolute_error', mean_absolute_error(y_test_b, y_pred_b))\n",
    "print('mean_squared_error', mean_squared_error(y_test_b, y_pred_b))\n",
    "print('root_mean_squared_error', sqrt(mean_squared_error(y_test_b, y_pred_b)))\n",
    "print('r2', r2_score(y_test_b, y_pred_b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f7833b6e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:22.561315Z",
     "iopub.status.busy": "2025-06-16T10:23:22.560662Z",
     "iopub.status.idle": "2025-06-16T10:23:22.926670Z",
     "shell.execute_reply": "2025-06-16T10:23:22.925635Z"
    },
    "papermill": {
     "duration": 0.394844,
     "end_time": "2025-06-16T10:23:22.929053",
     "exception": false,
     "start_time": "2025-06-16T10:23:22.534209",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='true', ylabel='pred'>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot predicted vs actual fare amounts\n",
    "\n",
    "data = {'true': y_test_b, 'pred': y_pred_b}\n",
    "results = pd.DataFrame(data)\n",
    "results.plot(figsize=(20,10), kind='scatter', x='true', y='pred')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24cc8b7f",
   "metadata": {
    "papermill": {
     "duration": 0.027431,
     "end_time": "2025-06-16T10:23:22.985074",
     "exception": false,
     "start_time": "2025-06-16T10:23:22.957643",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Data Leakage in Initial Model\n",
    "\n",
    "In our first version of the benchmark model, we included `trip_distance` as one of the input features. While this may improve the model’s performance, it introduces **data leakage** because trip distance is only known after the ride is completed, not at the time when fare prediction would happen.\n",
    "\n",
    "This means the model is learning from information it wouldn't have access to in a real-world prediction scenario (i.e., when the passenger has just entered the taxi).\n",
    "\n",
    "To correct this, we retrain the model **without `trip_distance`**, using only the categorical features available at pickup time.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "0d381426",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:23.042107Z",
     "iopub.status.busy": "2025-06-16T10:23:23.041762Z",
     "iopub.status.idle": "2025-06-16T10:23:24.084872Z",
     "shell.execute_reply": "2025-06-16T10:23:24.083974Z"
    },
    "papermill": {
     "duration": 1.073273,
     "end_time": "2025-06-16T10:23:24.086444",
     "exception": false,
     "start_time": "2025-06-16T10:23:23.013171",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mean_absolute_error 10.746587859174753\n",
      "mean_squared_error 260.5035096826267\n",
      "root_mean_squared_error 16.14012111734688\n",
      "r2 0.22806507584418645\n"
     ]
    }
   ],
   "source": [
    "# Updated features (no data leakage)\n",
    "categorical_features_benchmark = ['PULocationID','transaction_month','transaction_day','transaction_hour']\n",
    "input_features_benchmark  = categorical_features_benchmark\n",
    "target_feature_benchmark  = 'total_amount'\n",
    "\n",
    "\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Prepare features and target\n",
    "X_bench = data_for_benchmark_model[input_features_benchmark]\n",
    "y_bench = data_for_benchmark_model[target_feature_benchmark]\n",
    "\n",
    "# One-hot encode categorical variables\n",
    "X_bench = pd.get_dummies(X_bench)\n",
    "\n",
    "# Train-test split\n",
    "X_train_b, X_test_b, y_train_b, y_test_b = train_test_split(X_bench, y_bench, test_size=0.33, random_state=42)\n",
    "\n",
    "# Train Decision Tree without trip_distance\n",
    "from sklearn.tree import DecisionTreeRegressor \n",
    "\n",
    "tree = DecisionTreeRegressor(max_depth=10)\n",
    "tree.fit(X_train_b, y_train_b)\n",
    "\n",
    "# Evaluate model\n",
    "model_at_hand = tree\n",
    "\n",
    "y_pred_b = model_at_hand.predict(X_test_b)\n",
    "\n",
    "# Predict and evaluate\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.metrics import r2_score\n",
    "from math import sqrt\n",
    "\n",
    "print('mean_absolute_error', mean_absolute_error(y_test_b, y_pred_b))\n",
    "print('mean_squared_error', mean_squared_error(y_test_b, y_pred_b))\n",
    "print('root_mean_squared_error', sqrt(mean_squared_error(y_test_b, y_pred_b)))\n",
    "print('r2', r2_score(y_test_b, y_pred_b))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "42571277",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:24.145700Z",
     "iopub.status.busy": "2025-06-16T10:23:24.145400Z",
     "iopub.status.idle": "2025-06-16T10:23:24.500078Z",
     "shell.execute_reply": "2025-06-16T10:23:24.499244Z"
    },
    "papermill": {
     "duration": 0.386674,
     "end_time": "2025-06-16T10:23:24.501695",
     "exception": false,
     "start_time": "2025-06-16T10:23:24.115021",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='true', ylabel='pred'>"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot predicted vs actual fare amounts\n",
    "\n",
    "data = {'true': y_test_b, 'pred': y_pred_b}\n",
    "results = pd.DataFrame(data)\n",
    "\n",
    "results.plot(figsize=(20,10), kind='scatter', x='true', y='pred')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95ea68d2",
   "metadata": {
    "papermill": {
     "duration": 0.029015,
     "end_time": "2025-06-16T10:23:24.561023",
     "exception": false,
     "start_time": "2025-06-16T10:23:24.532008",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "As expected, removing `trip_distance` reduces model performance, but gives a much more **realistic baseline** for real-world fare prediction at ride start time.\n",
    "\n",
    "This also highlights the importance of avoiding data leakage even one feature can drastically affect model validity.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "a2942e83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:24.621617Z",
     "iopub.status.busy": "2025-06-16T10:23:24.620827Z",
     "iopub.status.idle": "2025-06-16T10:23:24.631969Z",
     "shell.execute_reply": "2025-06-16T10:23:24.631176Z"
    },
    "papermill": {
     "duration": 0.042976,
     "end_time": "2025-06-16T10:23:24.633651",
     "exception": false,
     "start_time": "2025-06-16T10:23:24.590675",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>count_of_transactions</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>115.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>132.510</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>106.200</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>56.400</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>2.160000</td>\n",
       "      <td>70.205</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0            1       2025-01-01                  1                1   \n",
       "1            1       2025-01-01                  1                1   \n",
       "2            1       2025-01-01                  1                1   \n",
       "3            1       2025-01-01                  1                1   \n",
       "4            1       2025-01-01                  1                1   \n",
       "\n",
       "   transaction_hour  trip_distance  total_amount  count_of_transactions  \n",
       "0                 6       0.100000       115.000                      1  \n",
       "1                 9       0.000000       132.510                      4  \n",
       "2                12       0.000000       106.200                      2  \n",
       "3                13       1.333333        56.400                      3  \n",
       "4                14       2.160000        70.205                      2  "
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_grouped_by_region.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "703e99e3",
   "metadata": {
    "papermill": {
     "duration": 0.029457,
     "end_time": "2025-06-16T10:23:24.692586",
     "exception": false,
     "start_time": "2025-06-16T10:23:24.663129",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 6. Advanced Feature Engineering – Time, Borough & Weather\n",
    "\n",
    "To enrich our dataset, we introduce several contextual features based on time, holidays, NYC zones, and daily weather data. These features help capture conditions that influence fare variability, such as:\n",
    "\n",
    "- **Day of the week** and whether it's a **weekend**\n",
    "- Whether the ride took place on a **federal holiday**\n",
    "- The **borough** corresponding to the pickup location\n",
    "- Daily **temperature**, **humidity**, **precipitation**, and other weather indicators\n",
    "\n",
    "All these features are known or predictable at the time of pickup and improve model robustness without introducing data leakage.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "3aaed66a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:24.752859Z",
     "iopub.status.busy": "2025-06-16T10:23:24.752254Z",
     "iopub.status.idle": "2025-06-16T10:23:24.760709Z",
     "shell.execute_reply": "2025-06-16T10:23:24.759708Z"
    },
    "papermill": {
     "duration": 0.040621,
     "end_time": "2025-06-16T10:23:24.762358",
     "exception": false,
     "start_time": "2025-06-16T10:23:24.721737",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Copy working dataset\n",
    "data_with_new_features = taxi_grouped_by_region.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "28807dc0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:24.822722Z",
     "iopub.status.busy": "2025-06-16T10:23:24.822078Z",
     "iopub.status.idle": "2025-06-16T10:23:24.850260Z",
     "shell.execute_reply": "2025-06-16T10:23:24.849396Z"
    },
    "papermill": {
     "duration": 0.060102,
     "end_time": "2025-06-16T10:23:24.851659",
     "exception": false,
     "start_time": "2025-06-16T10:23:24.791557",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Add weekday (0 = Monday, 6 = Sunday) and weekend flag\n",
    "data_with_new_features['transaction_week_day'] = data_with_new_features['transaction_date'].dt.weekday\n",
    "data_with_new_features['weekend'] = data_with_new_features['transaction_week_day'].apply(lambda x: True if x == 5 or x == 6 else False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "f5b002b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:24.911774Z",
     "iopub.status.busy": "2025-06-16T10:23:24.910979Z",
     "iopub.status.idle": "2025-06-16T10:23:24.974156Z",
     "shell.execute_reply": "2025-06-16T10:23:24.973051Z"
    },
    "papermill": {
     "duration": 0.094853,
     "end_time": "2025-06-16T10:23:24.975762",
     "exception": false,
     "start_time": "2025-06-16T10:23:24.880909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Add US federal holiday flag for 2025\n",
    "from pandas.tseries.holiday import USFederalHolidayCalendar\n",
    "\n",
    "cal = USFederalHolidayCalendar()\n",
    "holidays = cal.holidays(start='2025-01-01', end='2025-12-31').to_pydatetime()\n",
    "holidays = [d.date() for d in holidays]\n",
    "\n",
    "# Ensure date column is in pure date format\n",
    "data_with_new_features['transaction_date'] = data_with_new_features['transaction_date'].dt.date\n",
    "data_with_new_features['is_holiday'] = data_with_new_features['transaction_date'].isin(holidays)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "b29be44b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.038860Z",
     "iopub.status.busy": "2025-06-16T10:23:25.037911Z",
     "iopub.status.idle": "2025-06-16T10:23:25.053405Z",
     "shell.execute_reply": "2025-06-16T10:23:25.052567Z"
    },
    "papermill": {
     "duration": 0.049504,
     "end_time": "2025-06-16T10:23:25.054702",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.005198",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>count_of_transactions</th>\n",
       "      <th>transaction_week_day</th>\n",
       "      <th>weekend</th>\n",
       "      <th>is_holiday</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>115.000</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>132.510</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>106.200</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>56.400</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>2.160000</td>\n",
       "      <td>70.205</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0            1       2025-01-01                  1                1   \n",
       "1            1       2025-01-01                  1                1   \n",
       "2            1       2025-01-01                  1                1   \n",
       "3            1       2025-01-01                  1                1   \n",
       "4            1       2025-01-01                  1                1   \n",
       "\n",
       "   transaction_hour  trip_distance  total_amount  count_of_transactions  \\\n",
       "0                 6       0.100000       115.000                      1   \n",
       "1                 9       0.000000       132.510                      4   \n",
       "2                12       0.000000       106.200                      2   \n",
       "3                13       1.333333        56.400                      3   \n",
       "4                14       2.160000        70.205                      2   \n",
       "\n",
       "   transaction_week_day  weekend  is_holiday  \n",
       "0                     2    False        True  \n",
       "1                     2    False        True  \n",
       "2                     2    False        True  \n",
       "3                     2    False        True  \n",
       "4                     2    False        True  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_with_new_features.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d70652ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.115696Z",
     "iopub.status.busy": "2025-06-16T10:23:25.115061Z",
     "iopub.status.idle": "2025-06-16T10:23:25.121534Z",
     "shell.execute_reply": "2025-06-16T10:23:25.120731Z"
    },
    "papermill": {
     "duration": 0.038255,
     "end_time": "2025-06-16T10:23:25.122852",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.084597",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PULocationID             string[python]\n",
       "transaction_date                 object\n",
       "transaction_month                 int32\n",
       "transaction_day                   int32\n",
       "transaction_hour                  int32\n",
       "trip_distance                   float64\n",
       "total_amount                    float64\n",
       "count_of_transactions             int64\n",
       "transaction_week_day              int32\n",
       "weekend                            bool\n",
       "is_holiday                         bool\n",
       "dtype: object"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_with_new_features.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "f2dc095e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.197806Z",
     "iopub.status.busy": "2025-06-16T10:23:25.197531Z",
     "iopub.status.idle": "2025-06-16T10:23:25.232691Z",
     "shell.execute_reply": "2025-06-16T10:23:25.231621Z"
    },
    "papermill": {
     "duration": 0.077417,
     "end_time": "2025-06-16T10:23:25.234187",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.156770",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LocationID</th>\n",
       "      <th>Borough</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>EWR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Queens</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Bronx</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Manhattan</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Staten Island</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  LocationID        Borough\n",
       "0          1            EWR\n",
       "1          2         Queens\n",
       "2          3          Bronx\n",
       "3          4      Manhattan\n",
       "4          5  Staten Island"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load taxi zone lookup to map PULocationID → Borough\n",
    "zone_lookup = pd.read_csv('/kaggle/input/tlc-taxi-zone/taxi_zone_lookup.csv')\n",
    "zone_lookup = zone_lookup[['LocationID','Borough']]\n",
    "zone_lookup['LocationID'] = zone_lookup['LocationID'].astype(str)\n",
    "zone_lookup.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "39cca134",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.297186Z",
     "iopub.status.busy": "2025-06-16T10:23:25.296843Z",
     "iopub.status.idle": "2025-06-16T10:23:25.348148Z",
     "shell.execute_reply": "2025-06-16T10:23:25.347312Z"
    },
    "papermill": {
     "duration": 0.085551,
     "end_time": "2025-06-16T10:23:25.349691",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.264140",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>count_of_transactions</th>\n",
       "      <th>transaction_week_day</th>\n",
       "      <th>weekend</th>\n",
       "      <th>is_holiday</th>\n",
       "      <th>Borough</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>115.000</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>132.510</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>106.200</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>56.400</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>2.160000</td>\n",
       "      <td>70.205</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0            1       2025-01-01                  1                1   \n",
       "1            1       2025-01-01                  1                1   \n",
       "2            1       2025-01-01                  1                1   \n",
       "3            1       2025-01-01                  1                1   \n",
       "4            1       2025-01-01                  1                1   \n",
       "\n",
       "   transaction_hour  trip_distance  total_amount  count_of_transactions  \\\n",
       "0                 6       0.100000       115.000                      1   \n",
       "1                 9       0.000000       132.510                      4   \n",
       "2                12       0.000000       106.200                      2   \n",
       "3                13       1.333333        56.400                      3   \n",
       "4                14       2.160000        70.205                      2   \n",
       "\n",
       "   transaction_week_day  weekend  is_holiday Borough  \n",
       "0                     2    False        True     EWR  \n",
       "1                     2    False        True     EWR  \n",
       "2                     2    False        True     EWR  \n",
       "3                     2    False        True     EWR  \n",
       "4                     2    False        True     EWR  "
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Merge with taxi data\n",
    "data_with_new_features = data_with_new_features.merge(zone_lookup, left_on='PULocationID', right_on='LocationID', how='left')\n",
    "data_with_new_features.drop('LocationID', axis=1, inplace=True)\n",
    "data_with_new_features.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "894550ef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.411855Z",
     "iopub.status.busy": "2025-06-16T10:23:25.411577Z",
     "iopub.status.idle": "2025-06-16T10:23:25.424927Z",
     "shell.execute_reply": "2025-06-16T10:23:25.423784Z"
    },
    "papermill": {
     "duration": 0.046554,
     "end_time": "2025-06-16T10:23:25.426489",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.379935",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Borough\n",
       "Manhattan        42912\n",
       "Brooklyn         22150\n",
       "Queens           20908\n",
       "Bronx             8912\n",
       "Unknown            687\n",
       "EWR                230\n",
       "Staten Island      225\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_with_new_features['Borough'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "3d2b8148",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.488062Z",
     "iopub.status.busy": "2025-06-16T10:23:25.487784Z",
     "iopub.status.idle": "2025-06-16T10:23:25.509478Z",
     "shell.execute_reply": "2025-06-16T10:23:25.508441Z"
    },
    "papermill": {
     "duration": 0.05452,
     "end_time": "2025-06-16T10:23:25.511246",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.456726",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Load daily weather for NYC January 2025\n",
    "jan_weather = pd.read_csv('/kaggle/input/new-york-city-weather-january-2025/New York City 2025-01-01 to 2025-01-31.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "21bf4721",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.573842Z",
     "iopub.status.busy": "2025-06-16T10:23:25.573559Z",
     "iopub.status.idle": "2025-06-16T10:23:25.597262Z",
     "shell.execute_reply": "2025-06-16T10:23:25.596272Z"
    },
    "papermill": {
     "duration": 0.056926,
     "end_time": "2025-06-16T10:23:25.598745",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.541819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n",
      "  has_large_values = (abs_vals > 1e6).any()\n",
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n",
      "  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n",
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n",
      "  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n",
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n",
      "  has_large_values = (abs_vals > 1e6).any()\n",
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n",
      "  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n",
      "/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n",
      "  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>datetime</th>\n",
       "      <th>tempmax</th>\n",
       "      <th>tempmin</th>\n",
       "      <th>temp</th>\n",
       "      <th>feelslikemax</th>\n",
       "      <th>feelslikemin</th>\n",
       "      <th>feelslike</th>\n",
       "      <th>dew</th>\n",
       "      <th>humidity</th>\n",
       "      <th>...</th>\n",
       "      <th>solarenergy</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>severerisk</th>\n",
       "      <th>sunrise</th>\n",
       "      <th>sunset</th>\n",
       "      <th>moonphase</th>\n",
       "      <th>conditions</th>\n",
       "      <th>description</th>\n",
       "      <th>icon</th>\n",
       "      <th>stations</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New York City</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>50.8</td>\n",
       "      <td>41.3</td>\n",
       "      <td>45.9</td>\n",
       "      <td>50.8</td>\n",
       "      <td>33.0</td>\n",
       "      <td>41.4</td>\n",
       "      <td>36.0</td>\n",
       "      <td>69.7</td>\n",
       "      <td>...</td>\n",
       "      <td>3.8</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2025-01-01T07:20:16</td>\n",
       "      <td>2025-01-01T16:39:37</td>\n",
       "      <td>0.06</td>\n",
       "      <td>Rain, Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day with early mo...</td>\n",
       "      <td>rain</td>\n",
       "      <td>72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>New York City</td>\n",
       "      <td>2025-01-02</td>\n",
       "      <td>42.5</td>\n",
       "      <td>34.3</td>\n",
       "      <td>38.7</td>\n",
       "      <td>34.3</td>\n",
       "      <td>23.2</td>\n",
       "      <td>30.6</td>\n",
       "      <td>19.5</td>\n",
       "      <td>46.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.4</td>\n",
       "      <td>3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2025-01-02T07:20:20</td>\n",
       "      <td>2025-01-02T16:40:29</td>\n",
       "      <td>0.10</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>New York City</td>\n",
       "      <td>2025-01-03</td>\n",
       "      <td>38.4</td>\n",
       "      <td>31.1</td>\n",
       "      <td>34.9</td>\n",
       "      <td>32.7</td>\n",
       "      <td>22.4</td>\n",
       "      <td>27.0</td>\n",
       "      <td>16.6</td>\n",
       "      <td>47.3</td>\n",
       "      <td>...</td>\n",
       "      <td>8.5</td>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2025-01-03T07:20:23</td>\n",
       "      <td>2025-01-03T16:41:22</td>\n",
       "      <td>0.13</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>New York City</td>\n",
       "      <td>2025-01-04</td>\n",
       "      <td>32.8</td>\n",
       "      <td>28.9</td>\n",
       "      <td>31.0</td>\n",
       "      <td>23.8</td>\n",
       "      <td>18.4</td>\n",
       "      <td>20.8</td>\n",
       "      <td>8.4</td>\n",
       "      <td>38.6</td>\n",
       "      <td>...</td>\n",
       "      <td>6.7</td>\n",
       "      <td>6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2025-01-04T07:20:23</td>\n",
       "      <td>2025-01-04T16:42:17</td>\n",
       "      <td>0.17</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>New York City</td>\n",
       "      <td>2025-01-05</td>\n",
       "      <td>33.5</td>\n",
       "      <td>28.3</td>\n",
       "      <td>30.0</td>\n",
       "      <td>24.6</td>\n",
       "      <td>17.7</td>\n",
       "      <td>20.4</td>\n",
       "      <td>10.4</td>\n",
       "      <td>43.6</td>\n",
       "      <td>...</td>\n",
       "      <td>7.5</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2025-01-05T07:20:21</td>\n",
       "      <td>2025-01-05T16:43:13</td>\n",
       "      <td>0.21</td>\n",
       "      <td>Partially cloudy</td>\n",
       "      <td>Partly cloudy throughout the day.</td>\n",
       "      <td>partly-cloudy-day</td>\n",
       "      <td>72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            name    datetime  tempmax  tempmin  temp  feelslikemax  \\\n",
       "0  New York City  2025-01-01     50.8     41.3  45.9          50.8   \n",
       "1  New York City  2025-01-02     42.5     34.3  38.7          34.3   \n",
       "2  New York City  2025-01-03     38.4     31.1  34.9          32.7   \n",
       "3  New York City  2025-01-04     32.8     28.9  31.0          23.8   \n",
       "4  New York City  2025-01-05     33.5     28.3  30.0          24.6   \n",
       "\n",
       "   feelslikemin  feelslike   dew  humidity  ...  solarenergy  uvindex  \\\n",
       "0          33.0       41.4  36.0      69.7  ...          3.8        3   \n",
       "1          23.2       30.6  19.5      46.0  ...          5.4        3   \n",
       "2          22.4       27.0  16.6      47.3  ...          8.5        6   \n",
       "3          18.4       20.8   8.4      38.6  ...          6.7        6   \n",
       "4          17.7       20.4  10.4      43.6  ...          7.5        4   \n",
       "\n",
       "   severerisk              sunrise               sunset  moonphase  \\\n",
       "0         NaN  2025-01-01T07:20:16  2025-01-01T16:39:37       0.06   \n",
       "1         NaN  2025-01-02T07:20:20  2025-01-02T16:40:29       0.10   \n",
       "2         NaN  2025-01-03T07:20:23  2025-01-03T16:41:22       0.13   \n",
       "3         NaN  2025-01-04T07:20:23  2025-01-04T16:42:17       0.17   \n",
       "4         NaN  2025-01-05T07:20:21  2025-01-05T16:43:13       0.21   \n",
       "\n",
       "               conditions                                        description  \\\n",
       "0  Rain, Partially cloudy  Partly cloudy throughout the day with early mo...   \n",
       "1        Partially cloudy                  Partly cloudy throughout the day.   \n",
       "2        Partially cloudy                  Partly cloudy throughout the day.   \n",
       "3        Partially cloudy                  Partly cloudy throughout the day.   \n",
       "4        Partially cloudy                  Partly cloudy throughout the day.   \n",
       "\n",
       "                icon                                           stations  \n",
       "0               rain  72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...  \n",
       "1  partly-cloudy-day  72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...  \n",
       "2  partly-cloudy-day  72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...  \n",
       "3  partly-cloudy-day  72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...  \n",
       "4  partly-cloudy-day  72505394728,KEWR,KLGA,72502014734,F1417,KNYC,7...  \n",
       "\n",
       "[5 rows x 33 columns]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jan_weather.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "6d0e48a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.663657Z",
     "iopub.status.busy": "2025-06-16T10:23:25.663351Z",
     "iopub.status.idle": "2025-06-16T10:23:25.668574Z",
     "shell.execute_reply": "2025-06-16T10:23:25.667770Z"
    },
    "papermill": {
     "duration": 0.038591,
     "end_time": "2025-06-16T10:23:25.669931",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.631340",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(31, 33)"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jan_weather.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "86d62dc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.734139Z",
     "iopub.status.busy": "2025-06-16T10:23:25.733794Z",
     "iopub.status.idle": "2025-06-16T10:23:25.740006Z",
     "shell.execute_reply": "2025-06-16T10:23:25.739188Z"
    },
    "papermill": {
     "duration": 0.040435,
     "end_time": "2025-06-16T10:23:25.741473",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.701038",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['name', 'datetime', 'tempmax', 'tempmin', 'temp', 'feelslikemax',\n",
       "       'feelslikemin', 'feelslike', 'dew', 'humidity', 'precip', 'precipprob',\n",
       "       'precipcover', 'preciptype', 'snow', 'snowdepth', 'windgust',\n",
       "       'windspeed', 'winddir', 'sealevelpressure', 'cloudcover', 'visibility',\n",
       "       'solarradiation', 'solarenergy', 'uvindex', 'severerisk', 'sunrise',\n",
       "       'sunset', 'moonphase', 'conditions', 'description', 'icon', 'stations'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jan_weather.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "83838cbc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.804666Z",
     "iopub.status.busy": "2025-06-16T10:23:25.804366Z",
     "iopub.status.idle": "2025-06-16T10:23:25.814203Z",
     "shell.execute_reply": "2025-06-16T10:23:25.813262Z"
    },
    "papermill": {
     "duration": 0.043012,
     "end_time": "2025-06-16T10:23:25.815800",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.772788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Keep only needed columns\n",
    "jan_weather = jan_weather[['datetime', 'tempmax', 'tempmin', 'temp', 'feelslike',\n",
    "                         'humidity', 'precip', 'snow', 'cloudcover', 'uvindex']]\n",
    "\n",
    "# Convert to date format for merging\n",
    "jan_weather['date'] = pd.to_datetime(jan_weather['datetime']).dt.date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "e8a5a21c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.879763Z",
     "iopub.status.busy": "2025-06-16T10:23:25.879449Z",
     "iopub.status.idle": "2025-06-16T10:23:25.891583Z",
     "shell.execute_reply": "2025-06-16T10:23:25.890778Z"
    },
    "papermill": {
     "duration": 0.045529,
     "end_time": "2025-06-16T10:23:25.893144",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.847615",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Add engineered weather features\n",
    "jan_weather['temp_avg'] = (jan_weather['tempmax'] + jan_weather['tempmin']) / 2\n",
    "jan_weather['feelslike_avg'] = (jan_weather['feelslikemax'] + jan_weather['feelslikemin']) / 2 if 'feelslikemax' in jan_weather.columns else jan_weather['feelslike']\n",
    "jan_weather['rain_flag'] = jan_weather['precip'].fillna(0) > 0\n",
    "jan_weather['snow_flag'] = jan_weather['snow'].fillna(0) > 0\n",
    "jan_weather['cloudy_flag'] = jan_weather['cloudcover'].fillna(0) > 70  # arbitrary threshold\n",
    "jan_weather['temp_avg'] = (jan_weather['tempmax'] + jan_weather['tempmin']) / 2\n",
    "jan_weather['feelslike_avg'] = (jan_weather['feelslikemax'] + jan_weather['feelslikemin']) / 2 if 'feelslikemax' in jan_weather.columns else jan_weather['feelslike']\n",
    "jan_weather['rain_flag'] = jan_weather['precip'].fillna(0) > 0\n",
    "jan_weather['snow_flag'] = jan_weather['snow'].fillna(0) > 0\n",
    "jan_weather['cloudy_flag'] = jan_weather['cloudcover'].fillna(0) > 70  # arbitrary threshold\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "7d16679c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:25.956645Z",
     "iopub.status.busy": "2025-06-16T10:23:25.956022Z",
     "iopub.status.idle": "2025-06-16T10:23:25.994345Z",
     "shell.execute_reply": "2025-06-16T10:23:25.993487Z"
    },
    "papermill": {
     "duration": 0.071815,
     "end_time": "2025-06-16T10:23:25.995854",
     "exception": false,
     "start_time": "2025-06-16T10:23:25.924039",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Merge weather with taxi data\n",
    "taxi_weather_df = data_with_new_features.merge(jan_weather, left_on='transaction_date', right_on='date', how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "1989d96c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.059689Z",
     "iopub.status.busy": "2025-06-16T10:23:26.059383Z",
     "iopub.status.idle": "2025-06-16T10:23:26.078203Z",
     "shell.execute_reply": "2025-06-16T10:23:26.077377Z"
    },
    "papermill": {
     "duration": 0.053106,
     "end_time": "2025-06-16T10:23:26.079505",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.026399",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>count_of_transactions</th>\n",
       "      <th>transaction_week_day</th>\n",
       "      <th>weekend</th>\n",
       "      <th>...</th>\n",
       "      <th>precip</th>\n",
       "      <th>snow</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>uvindex</th>\n",
       "      <th>date</th>\n",
       "      <th>temp_avg</th>\n",
       "      <th>feelslike_avg</th>\n",
       "      <th>rain_flag</th>\n",
       "      <th>snow_flag</th>\n",
       "      <th>cloudy_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>115.000</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>3</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>132.510</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>3</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>106.200</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>3</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>56.400</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>3</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>2.160000</td>\n",
       "      <td>70.205</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>3</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0            1       2025-01-01                  1                1   \n",
       "1            1       2025-01-01                  1                1   \n",
       "2            1       2025-01-01                  1                1   \n",
       "3            1       2025-01-01                  1                1   \n",
       "4            1       2025-01-01                  1                1   \n",
       "\n",
       "   transaction_hour  trip_distance  total_amount  count_of_transactions  \\\n",
       "0                 6       0.100000       115.000                      1   \n",
       "1                 9       0.000000       132.510                      4   \n",
       "2                12       0.000000       106.200                      2   \n",
       "3                13       1.333333        56.400                      3   \n",
       "4                14       2.160000        70.205                      2   \n",
       "\n",
       "   transaction_week_day  weekend  ...  precip snow cloudcover  uvindex  \\\n",
       "0                     2    False  ...   0.036  0.0       85.7        3   \n",
       "1                     2    False  ...   0.036  0.0       85.7        3   \n",
       "2                     2    False  ...   0.036  0.0       85.7        3   \n",
       "3                     2    False  ...   0.036  0.0       85.7        3   \n",
       "4                     2    False  ...   0.036  0.0       85.7        3   \n",
       "\n",
       "         date  temp_avg  feelslike_avg  rain_flag  snow_flag  cloudy_flag  \n",
       "0  2025-01-01     46.05           41.4       True      False         True  \n",
       "1  2025-01-01     46.05           41.4       True      False         True  \n",
       "2  2025-01-01     46.05           41.4       True      False         True  \n",
       "3  2025-01-01     46.05           41.4       True      False         True  \n",
       "4  2025-01-01     46.05           41.4       True      False         True  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "9e642897",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.142306Z",
     "iopub.status.busy": "2025-06-16T10:23:26.141940Z",
     "iopub.status.idle": "2025-06-16T10:23:26.147584Z",
     "shell.execute_reply": "2025-06-16T10:23:26.146704Z"
    },
    "papermill": {
     "duration": 0.038499,
     "end_time": "2025-06-16T10:23:26.149057",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.110558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(96566, 28)"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "172bce90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.213765Z",
     "iopub.status.busy": "2025-06-16T10:23:26.213490Z",
     "iopub.status.idle": "2025-06-16T10:23:26.219628Z",
     "shell.execute_reply": "2025-06-16T10:23:26.218523Z"
    },
    "papermill": {
     "duration": 0.040752,
     "end_time": "2025-06-16T10:23:26.221239",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.180487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PULocationID', 'transaction_date', 'transaction_month',\n",
       "       'transaction_day', 'transaction_hour', 'trip_distance', 'total_amount',\n",
       "       'count_of_transactions', 'transaction_week_day', 'weekend',\n",
       "       'is_holiday', 'Borough', 'datetime', 'tempmax', 'tempmin', 'temp',\n",
       "       'feelslike', 'humidity', 'precip', 'snow', 'cloudcover', 'uvindex',\n",
       "       'date', 'temp_avg', 'feelslike_avg', 'rain_flag', 'snow_flag',\n",
       "       'cloudy_flag'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "a1bcc6e8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.285047Z",
     "iopub.status.busy": "2025-06-16T10:23:26.284730Z",
     "iopub.status.idle": "2025-06-16T10:23:26.294568Z",
     "shell.execute_reply": "2025-06-16T10:23:26.293578Z"
    },
    "papermill": {
     "duration": 0.043516,
     "end_time": "2025-06-16T10:23:26.296098",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.252582",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Drop redundant columns\n",
    "taxi_weather_df = taxi_weather_df.drop([\n",
    "    'datetime', 'date',\n",
    "    'temp', 'tempmax', 'tempmin','uvindex',\n",
    "    'feelslike','trip_distance'\n",
    "], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "13b76349",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.360221Z",
     "iopub.status.busy": "2025-06-16T10:23:26.359449Z",
     "iopub.status.idle": "2025-06-16T10:23:26.376147Z",
     "shell.execute_reply": "2025-06-16T10:23:26.375488Z"
    },
    "papermill": {
     "duration": 0.050082,
     "end_time": "2025-06-16T10:23:26.377500",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.327418",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>transaction_month</th>\n",
       "      <th>transaction_day</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>count_of_transactions</th>\n",
       "      <th>transaction_week_day</th>\n",
       "      <th>weekend</th>\n",
       "      <th>is_holiday</th>\n",
       "      <th>Borough</th>\n",
       "      <th>humidity</th>\n",
       "      <th>precip</th>\n",
       "      <th>snow</th>\n",
       "      <th>cloudcover</th>\n",
       "      <th>temp_avg</th>\n",
       "      <th>feelslike_avg</th>\n",
       "      <th>rain_flag</th>\n",
       "      <th>snow_flag</th>\n",
       "      <th>cloudy_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>115.000</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>132.510</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>106.200</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>56.400</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2025-01-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>70.205</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>EWR</td>\n",
       "      <td>69.7</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0</td>\n",
       "      <td>85.7</td>\n",
       "      <td>46.05</td>\n",
       "      <td>41.4</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID transaction_date  transaction_month  transaction_day  \\\n",
       "0            1       2025-01-01                  1                1   \n",
       "1            1       2025-01-01                  1                1   \n",
       "2            1       2025-01-01                  1                1   \n",
       "3            1       2025-01-01                  1                1   \n",
       "4            1       2025-01-01                  1                1   \n",
       "\n",
       "   transaction_hour  total_amount  count_of_transactions  \\\n",
       "0                 6       115.000                      1   \n",
       "1                 9       132.510                      4   \n",
       "2                12       106.200                      2   \n",
       "3                13        56.400                      3   \n",
       "4                14        70.205                      2   \n",
       "\n",
       "   transaction_week_day  weekend  is_holiday Borough  humidity  precip  snow  \\\n",
       "0                     2    False        True     EWR      69.7   0.036   0.0   \n",
       "1                     2    False        True     EWR      69.7   0.036   0.0   \n",
       "2                     2    False        True     EWR      69.7   0.036   0.0   \n",
       "3                     2    False        True     EWR      69.7   0.036   0.0   \n",
       "4                     2    False        True     EWR      69.7   0.036   0.0   \n",
       "\n",
       "   cloudcover  temp_avg  feelslike_avg  rain_flag  snow_flag  cloudy_flag  \n",
       "0        85.7     46.05           41.4       True      False         True  \n",
       "1        85.7     46.05           41.4       True      False         True  \n",
       "2        85.7     46.05           41.4       True      False         True  \n",
       "3        85.7     46.05           41.4       True      False         True  \n",
       "4        85.7     46.05           41.4       True      False         True  "
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "490d820c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.442944Z",
     "iopub.status.busy": "2025-06-16T10:23:26.442626Z",
     "iopub.status.idle": "2025-06-16T10:23:26.469382Z",
     "shell.execute_reply": "2025-06-16T10:23:26.468543Z"
    },
    "papermill": {
     "duration": 0.061613,
     "end_time": "2025-06-16T10:23:26.470812",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.409199",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PULocationID               0\n",
       "transaction_date           0\n",
       "transaction_month          0\n",
       "transaction_day            0\n",
       "transaction_hour           0\n",
       "total_amount               0\n",
       "count_of_transactions      0\n",
       "transaction_week_day       0\n",
       "weekend                    0\n",
       "is_holiday                 0\n",
       "Borough                  542\n",
       "humidity                   0\n",
       "precip                     0\n",
       "snow                       0\n",
       "cloudcover                 0\n",
       "temp_avg                   0\n",
       "feelslike_avg              0\n",
       "rain_flag                  0\n",
       "snow_flag                  0\n",
       "cloudy_flag                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Null check\n",
    "taxi_weather_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "c6ccf0ac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.535949Z",
     "iopub.status.busy": "2025-06-16T10:23:26.535627Z",
     "iopub.status.idle": "2025-06-16T10:23:26.548156Z",
     "shell.execute_reply": "2025-06-16T10:23:26.547286Z"
    },
    "papermill": {
     "duration": 0.046681,
     "end_time": "2025-06-16T10:23:26.549623",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.502942",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PULocationID\n",
       "265    542\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df[taxi_weather_df['Borough'].isna()]['PULocationID'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "90b25b3f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.615390Z",
     "iopub.status.busy": "2025-06-16T10:23:26.615020Z",
     "iopub.status.idle": "2025-06-16T10:23:26.627707Z",
     "shell.execute_reply": "2025-06-16T10:23:26.626538Z"
    },
    "papermill": {
     "duration": 0.046655,
     "end_time": "2025-06-16T10:23:26.629341",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.582686",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Fill unknown boroughs\n",
    "taxi_weather_df['Borough'] = taxi_weather_df['Borough'].fillna('Other')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "22f76e4a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.695473Z",
     "iopub.status.busy": "2025-06-16T10:23:26.695098Z",
     "iopub.status.idle": "2025-06-16T10:23:26.724239Z",
     "shell.execute_reply": "2025-06-16T10:23:26.723339Z"
    },
    "papermill": {
     "duration": 0.064168,
     "end_time": "2025-06-16T10:23:26.725795",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.661627",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PULocationID             0\n",
       "transaction_date         0\n",
       "transaction_month        0\n",
       "transaction_day          0\n",
       "transaction_hour         0\n",
       "total_amount             0\n",
       "count_of_transactions    0\n",
       "transaction_week_day     0\n",
       "weekend                  0\n",
       "is_holiday               0\n",
       "Borough                  0\n",
       "humidity                 0\n",
       "precip                   0\n",
       "snow                     0\n",
       "cloudcover               0\n",
       "temp_avg                 0\n",
       "feelslike_avg            0\n",
       "rain_flag                0\n",
       "snow_flag                0\n",
       "cloudy_flag              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "fcbc0a7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.790919Z",
     "iopub.status.busy": "2025-06-16T10:23:26.790017Z",
     "iopub.status.idle": "2025-06-16T10:23:26.795435Z",
     "shell.execute_reply": "2025-06-16T10:23:26.794699Z"
    },
    "papermill": {
     "duration": 0.039081,
     "end_time": "2025-06-16T10:23:26.796661",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.757580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(96566, 20)"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ef90e79",
   "metadata": {
    "papermill": {
     "duration": 0.032427,
     "end_time": "2025-06-16T10:23:26.861577",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.829150",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 7. Regression Modeling with Tree-Based Models\n",
    "\n",
    "To predict the taxi fare (`total_amount`) at the time of pickup, we now apply tree-based regression models. These models are capable of capturing non-linear relationships and interactions between the time, location, and weather-based features engineered earlier.\n",
    "\n",
    "We progressively improve model performance:\n",
    "- First, with a basic **Random Forest model**\n",
    "- Then, by adding contextual demand-related features\n",
    "- Finally, by comparing with a more advanced **XGBoost** model\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "000968e9",
   "metadata": {
    "papermill": {
     "duration": 0.03191,
     "end_time": "2025-06-16T10:23:26.926102",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.894192",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 7.1 Baseline Random Forest Regressor\n",
    "\n",
    "We begin with a Random Forest model trained on time, weather, and location features, without including demand proxies like ride count or average fare. This gives us a strong baseline while avoiding any potential data leakage.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "1e73d736",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:26.992478Z",
     "iopub.status.busy": "2025-06-16T10:23:26.992103Z",
     "iopub.status.idle": "2025-06-16T10:23:58.671405Z",
     "shell.execute_reply": "2025-06-16T10:23:58.670366Z"
    },
    "papermill": {
     "duration": 31.746282,
     "end_time": "2025-06-16T10:23:58.704474",
     "exception": false,
     "start_time": "2025-06-16T10:23:26.958192",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R² Score: 0.3590\n",
      "MAE: $9.06\n",
      "RMSE: $14.72\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error\n",
    "\n",
    "# Define features and target \n",
    "selected_features = [\n",
    "    'PULocationID', 'transaction_month', 'transaction_day', 'transaction_hour',\n",
    "    'transaction_week_day', 'weekend', 'is_holiday', 'Borough',\n",
    "    'humidity', 'precip', 'snow', 'cloudcover',\n",
    "    'temp_avg', 'feelslike_avg', 'rain_flag', 'snow_flag', 'cloudy_flag'\n",
    "]\n",
    "\n",
    "X = taxi_weather_df[selected_features]\n",
    "y = taxi_weather_df['total_amount']\n",
    "\n",
    "# Train/test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, random_state=42\n",
    ")\n",
    "\n",
    "# Preprocessing\n",
    "categorical_features = ['PULocationID', 'Borough']\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)\n",
    "    ],\n",
    "    remainder='passthrough'\n",
    ")\n",
    "\n",
    "# Build pipeline\n",
    "model = Pipeline(steps=[\n",
    "    ('preprocessing', preprocessor),\n",
    "    ('regressor', RandomForestRegressor(\n",
    "        n_estimators=40,\n",
    "        max_depth=30,\n",
    "        min_samples_leaf=5,\n",
    "        n_jobs=-1,\n",
    "        random_state=42\n",
    "    ))\n",
    "])\n",
    "\n",
    "# Train\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Evaluate\n",
    "y_pred = model.predict(X_test)\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "rmse = mean_squared_error(y_test, y_pred, squared=False)\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f\"R² Score: {r2:.4f}\")\n",
    "\n",
    "\n",
    "print(f\"MAE: ${mae:.2f}\")\n",
    "print(f\"RMSE: ${rmse:.2f}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "ffc533ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:58.772683Z",
     "iopub.status.busy": "2025-06-16T10:23:58.772370Z",
     "iopub.status.idle": "2025-06-16T10:23:58.777307Z",
     "shell.execute_reply": "2025-06-16T10:23:58.776388Z"
    },
    "papermill": {
     "duration": 0.040629,
     "end_time": "2025-06-16T10:23:58.778825",
     "exception": false,
     "start_time": "2025-06-16T10:23:58.738196",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Access the RandomForest model from the pipeline\n",
    "rf_model = model.named_steps['regressor']\n",
    "\n",
    "# Get feature names after one-hot encoding\n",
    "feature_names = model.named_steps['preprocessing'].get_feature_names_out()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfbadbc3",
   "metadata": {
    "papermill": {
     "duration": 0.03123,
     "end_time": "2025-06-16T10:23:58.842006",
     "exception": false,
     "start_time": "2025-06-16T10:23:58.810776",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Feature Importance\n",
    "\n",
    "We inspect which features had the highest impact on model decisions.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "a9dee641",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:58.907741Z",
     "iopub.status.busy": "2025-06-16T10:23:58.907105Z",
     "iopub.status.idle": "2025-06-16T10:23:59.235705Z",
     "shell.execute_reply": "2025-06-16T10:23:59.234691Z"
    },
    "papermill": {
     "duration": 0.364323,
     "end_time": "2025-06-16T10:23:59.237868",
     "exception": false,
     "start_time": "2025-06-16T10:23:58.873545",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Get importances\n",
    "importances = rf_model.feature_importances_\n",
    "\n",
    "# Sort and select top 20\n",
    "indices = np.argsort(importances)[-20:]\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.barh(range(len(indices)), importances[indices], align='center')\n",
    "plt.yticks(range(len(indices)), [feature_names[i] for i in indices])\n",
    "plt.xlabel('Feature Importance')\n",
    "plt.title('Top 20 Most Important Features')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "3815c176",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:59.307969Z",
     "iopub.status.busy": "2025-06-16T10:23:59.307661Z",
     "iopub.status.idle": "2025-06-16T10:23:59.313710Z",
     "shell.execute_reply": "2025-06-16T10:23:59.312747Z"
    },
    "papermill": {
     "duration": 0.042382,
     "end_time": "2025-06-16T10:23:59.315198",
     "exception": false,
     "start_time": "2025-06-16T10:23:59.272816",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PULocationID', 'transaction_date', 'transaction_month',\n",
       "       'transaction_day', 'transaction_hour', 'total_amount',\n",
       "       'count_of_transactions', 'transaction_week_day', 'weekend',\n",
       "       'is_holiday', 'Borough', 'humidity', 'precip', 'snow', 'cloudcover',\n",
       "       'temp_avg', 'feelslike_avg', 'rain_flag', 'snow_flag', 'cloudy_flag'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c783a1e2",
   "metadata": {
    "papermill": {
     "duration": 0.032724,
     "end_time": "2025-06-16T10:23:59.382703",
     "exception": false,
     "start_time": "2025-06-16T10:23:59.349979",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 7.2 Random Forest Regressor with Demand-Based Features\n",
    "\n",
    "We enhance the Random Forest model by including:\n",
    "- `avg_fare_by_zone_hour`: average fare per zone and hour (proxy for local fare behavior)\n",
    "- `zone_hour_demand_index`: standardized ride count per zone-hour (proxy for demand)\n",
    "\n",
    "These features help capture local temporal dynamics without data leakage.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "b42ab961",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:59.450425Z",
     "iopub.status.busy": "2025-06-16T10:23:59.450064Z",
     "iopub.status.idle": "2025-06-16T10:23:59.477018Z",
     "shell.execute_reply": "2025-06-16T10:23:59.476146Z"
    },
    "papermill": {
     "duration": 0.062913,
     "end_time": "2025-06-16T10:23:59.478684",
     "exception": false,
     "start_time": "2025-06-16T10:23:59.415771",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "zone_hour_agg = taxi_weather_df.groupby(['PULocationID', 'transaction_hour']).agg(\n",
    "    avg_fare_by_zone_hour=('total_amount', 'mean'),\n",
    "    ride_count_by_zone_hour=('total_amount', 'count')\n",
    ").reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "e6c2941f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:59.546878Z",
     "iopub.status.busy": "2025-06-16T10:23:59.545992Z",
     "iopub.status.idle": "2025-06-16T10:23:59.578024Z",
     "shell.execute_reply": "2025-06-16T10:23:59.577183Z"
    },
    "papermill": {
     "duration": 0.067554,
     "end_time": "2025-06-16T10:23:59.579637",
     "exception": false,
     "start_time": "2025-06-16T10:23:59.512083",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "taxi_weather_df = taxi_weather_df.merge(\n",
    "    zone_hour_agg,\n",
    "    on=['PULocationID', 'transaction_hour'],\n",
    "    how='left'\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "ffb36966",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:59.647968Z",
     "iopub.status.busy": "2025-06-16T10:23:59.647379Z",
     "iopub.status.idle": "2025-06-16T10:23:59.658395Z",
     "shell.execute_reply": "2025-06-16T10:23:59.657580Z"
    },
    "papermill": {
     "duration": 0.046518,
     "end_time": "2025-06-16T10:23:59.659776",
     "exception": false,
     "start_time": "2025-06-16T10:23:59.613258",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>transaction_hour</th>\n",
       "      <th>avg_fare_by_zone_hour</th>\n",
       "      <th>ride_count_by_zone_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>101.566667</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>128.934167</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>83.675417</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>108.556579</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>106.188347</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  PULocationID  transaction_hour  avg_fare_by_zone_hour  \\\n",
       "0            1                 6             101.566667   \n",
       "1            1                 9             128.934167   \n",
       "2            1                12              83.675417   \n",
       "3            1                13             108.556579   \n",
       "4            1                14             106.188347   \n",
       "\n",
       "   ride_count_by_zone_hour  \n",
       "0                        6  \n",
       "1                       12  \n",
       "2                       12  \n",
       "3                       19  \n",
       "4                       25  "
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "taxi_weather_df[['PULocationID', 'transaction_hour', 'avg_fare_by_zone_hour', 'ride_count_by_zone_hour']].head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "04684b94",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:59.728828Z",
     "iopub.status.busy": "2025-06-16T10:23:59.728502Z",
     "iopub.status.idle": "2025-06-16T10:23:59.738965Z",
     "shell.execute_reply": "2025-06-16T10:23:59.738022Z"
    },
    "papermill": {
     "duration": 0.046671,
     "end_time": "2025-06-16T10:23:59.740744",
     "exception": false,
     "start_time": "2025-06-16T10:23:59.694073",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "scaler = StandardScaler()\n",
    "taxi_weather_df['zone_hour_demand_index'] = scaler.fit_transform(\n",
    "    taxi_weather_df[['ride_count_by_zone_hour']]\n",
    ")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "33216cd0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:23:59.808901Z",
     "iopub.status.busy": "2025-06-16T10:23:59.808586Z",
     "iopub.status.idle": "2025-06-16T10:24:59.435639Z",
     "shell.execute_reply": "2025-06-16T10:24:59.434714Z"
    },
    "papermill": {
     "duration": 59.696502,
     "end_time": "2025-06-16T10:24:59.470758",
     "exception": false,
     "start_time": "2025-06-16T10:23:59.774256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R² Score: 0.4061\n",
      "MAE: $8.63\n",
      "RMSE: $14.17\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error\n",
    "\n",
    "# Define features and target\n",
    "selected_features = [\n",
    "    'PULocationID', 'transaction_month', 'transaction_day', 'transaction_hour',\n",
    "    'transaction_week_day', 'weekend', 'is_holiday', 'Borough',\n",
    "    'humidity', 'precip', 'snow', 'cloudcover',\n",
    "    'temp_avg', 'feelslike_avg', 'rain_flag', 'snow_flag', 'cloudy_flag',\n",
    "    'avg_fare_by_zone_hour', 'zone_hour_demand_index'\n",
    "]\n",
    "\n",
    "X = taxi_weather_df[selected_features]\n",
    "y = taxi_weather_df['total_amount']\n",
    "\n",
    "# Train/test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, random_state=42\n",
    ")\n",
    "\n",
    "# Preprocessing\n",
    "categorical_features = ['PULocationID', 'Borough']\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)\n",
    "    ],\n",
    "    remainder='passthrough'\n",
    ")\n",
    "\n",
    "# Build pipeline\n",
    "model = Pipeline(steps=[\n",
    "    ('preprocessing', preprocessor),\n",
    "    ('regressor', RandomForestRegressor(\n",
    "        n_estimators=40,\n",
    "        max_depth=30,\n",
    "        min_samples_leaf=5,\n",
    "        n_jobs=-1,\n",
    "        random_state=42\n",
    "    ))\n",
    "])\n",
    "\n",
    "# Train\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Evaluate\n",
    "y_pred = model.predict(X_test)\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "rmse = mean_squared_error(y_test, y_pred, squared=False)\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f\"R² Score: {r2:.4f}\")\n",
    "\n",
    "\n",
    "print(f\"MAE: ${mae:.2f}\")\n",
    "print(f\"RMSE: ${rmse:.2f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "017a3787",
   "metadata": {
    "papermill": {
     "duration": 0.035658,
     "end_time": "2025-06-16T10:24:59.540154",
     "exception": false,
     "start_time": "2025-06-16T10:24:59.504496",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 7.3 XGBoost Regressor\n",
    "\n",
    "We now train an `XGBoostRegressor` using the same set of engineered features. XGBoost is a powerful gradient boosting algorithm often used in machine learning competitions.\n",
    "\n",
    "Its strength lies in its ability to model complex non-linear patterns while remaining robust to overfitting.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "19372e31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:24:59.609533Z",
     "iopub.status.busy": "2025-06-16T10:24:59.609230Z",
     "iopub.status.idle": "2025-06-16T10:25:00.699325Z",
     "shell.execute_reply": "2025-06-16T10:25:00.697885Z"
    },
    "papermill": {
     "duration": 1.126866,
     "end_time": "2025-06-16T10:25:00.700766",
     "exception": false,
     "start_time": "2025-06-16T10:24:59.573900",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R² Score: 0.4325\n",
      "MAE: $8.46\n",
      "RMSE: $13.85\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import OneHotEncoder, StandardScaler\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score\n",
    "from xgboost import XGBRegressor\n",
    "\n",
    "# Define features & target\n",
    "selected_features = [\n",
    "    'PULocationID', 'transaction_month', 'transaction_day', 'transaction_hour',\n",
    "    'transaction_week_day', 'weekend', 'is_holiday', 'Borough',\n",
    "    'humidity', 'precip', 'snow', 'cloudcover',\n",
    "    'temp_avg', 'feelslike_avg', 'rain_flag', 'snow_flag', 'cloudy_flag',\n",
    "    'avg_fare_by_zone_hour', 'zone_hour_demand_index'\n",
    "]\n",
    "\n",
    "X = taxi_weather_df[selected_features]\n",
    "y = taxi_weather_df['total_amount']\n",
    "\n",
    "# Train/test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, random_state=42\n",
    ")\n",
    "\n",
    "# Preprocessing pipeline\n",
    "categorical_features = ['PULocationID', 'Borough']\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)\n",
    "    ],\n",
    "    remainder='passthrough'  # keep all numeric features\n",
    ")\n",
    "\n",
    "# Define XGBoost pipeline\n",
    "model = Pipeline(steps=[\n",
    "    ('preprocessing', preprocessor),\n",
    "    ('regressor', XGBRegressor(\n",
    "        n_estimators=100,\n",
    "        max_depth=6,\n",
    "        learning_rate=0.1,\n",
    "        n_jobs=-1,\n",
    "        random_state=42,\n",
    "        verbosity=0\n",
    "    ))\n",
    "])\n",
    "\n",
    "# Train\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Predict & Evaluate\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "mae = mean_absolute_error(y_test, y_pred)\n",
    "rmse = mean_squared_error(y_test, y_pred, squared=False)\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "\n",
    "print(f\"R² Score: {r2:.4f}\")\n",
    "print(f\"MAE: ${mae:.2f}\")\n",
    "print(f\"RMSE: ${rmse:.2f}\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fe50d5a",
   "metadata": {
    "papermill": {
     "duration": 0.033264,
     "end_time": "2025-06-16T10:25:00.767853",
     "exception": false,
     "start_time": "2025-06-16T10:25:00.734589",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### Feature Importance\n",
    "\n",
    "We inspect which features had the highest impact on model decisions.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "a2977da6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:25:00.836852Z",
     "iopub.status.busy": "2025-06-16T10:25:00.836253Z",
     "iopub.status.idle": "2025-06-16T10:25:01.145365Z",
     "shell.execute_reply": "2025-06-16T10:25:01.144183Z"
    },
    "papermill": {
     "duration": 0.345444,
     "end_time": "2025-06-16T10:25:01.146893",
     "exception": false,
     "start_time": "2025-06-16T10:25:00.801449",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Extract trained XGBoost model from the pipeline\n",
    "xgb_model = model.named_steps['regressor']\n",
    "\n",
    "# Get full feature names after OneHotEncoding\n",
    "feature_names = model.named_steps['preprocessing'].get_feature_names_out()\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# Get feature importances\n",
    "importances = xgb_model.feature_importances_\n",
    "\n",
    "# Convert to DataFrame for easy handling\n",
    "importance_df = pd.DataFrame({\n",
    "    'feature': feature_names,\n",
    "    'importance': importances\n",
    "}).sort_values(by='importance', ascending=False)\n",
    "\n",
    "# Plot top 20\n",
    "top_n = 20\n",
    "top_features = importance_df.head(top_n)\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.barh(top_features['feature'][::-1], top_features['importance'][::-1])\n",
    "plt.xlabel('Importance')\n",
    "plt.title(f'Top {top_n} Most Important Features (XGBoost)')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd9ef234",
   "metadata": {
    "papermill": {
     "duration": 0.035749,
     "end_time": "2025-06-16T10:25:01.220566",
     "exception": false,
     "start_time": "2025-06-16T10:25:01.184817",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 8. Fare Range Classification (XGBoost)\n",
    "\n",
    "Instead of predicting the exact fare amount, we now approach the problem as a **classification task**.\n",
    "\n",
    "We bucket the target variable `total_amount` into three fare classes:\n",
    "\n",
    "- **Low**: under \\$20  \n",
    "- **Medium**: between 20 and \\$30  \n",
    "- **High**: above \\$30  \n",
    "\n",
    "This formulation simplifies the problem and allows us to evaluate performance using classification metrics such as:\n",
    "\n",
    "- **Precision**  \n",
    "- **Recall**  \n",
    "- **F1-Score**  \n",
    "- **Confusion Matrix**  \n",
    "\n",
    "We use the same features as in regression, and train an `XGBoostClassifier` with a OneHotEncoding pipeline for categorical variables.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "77084866",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-06-16T10:25:01.292413Z",
     "iopub.status.busy": "2025-06-16T10:25:01.292041Z",
     "iopub.status.idle": "2025-06-16T10:25:04.328884Z",
     "shell.execute_reply": "2025-06-16T10:25:04.327808Z"
    },
    "papermill": {
     "duration": 3.075203,
     "end_time": "2025-06-16T10:25:04.330690",
     "exception": false,
     "start_time": "2025-06-16T10:25:01.255487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Classification Report:\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "        high       0.61      0.73      0.66      6120\n",
      "         low       0.56      0.43      0.49      4964\n",
      "      medium       0.67      0.66      0.66      8230\n",
      "\n",
      "    accuracy                           0.62     19314\n",
      "   macro avg       0.61      0.61      0.60     19314\n",
      "weighted avg       0.62      0.62      0.62     19314\n",
      "\n",
      "Confusion Matrix:\n",
      "\n",
      "[[4487  543 1090]\n",
      " [1220 2137 1607]\n",
      " [1682 1146 5402]]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import OneHotEncoder, LabelEncoder\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "from xgboost import XGBClassifier\n",
    "\n",
    "# Define target classes from total_amount\n",
    "def fare_bucket(fare):\n",
    "    if fare < 20:\n",
    "        return 'low'\n",
    "    elif fare <= 30:\n",
    "        return 'medium'\n",
    "    else:\n",
    "        return 'high'\n",
    "\n",
    "# Create the target column\n",
    "taxi_weather_df['fare_class'] = taxi_weather_df['total_amount'].apply(fare_bucket)\n",
    "\n",
    "# Encode the target class into integers (required by XGBoost)\n",
    "label_encoder = LabelEncoder()\n",
    "y = label_encoder.fit_transform(taxi_weather_df['fare_class'])\n",
    "\n",
    "# Define feature columns\n",
    "selected_features = [\n",
    "    'PULocationID', 'transaction_month', 'transaction_day', 'transaction_hour',\n",
    "    'transaction_week_day', 'weekend', 'is_holiday', 'Borough',\n",
    "    'humidity', 'precip', 'snow', 'cloudcover',\n",
    "    'temp_avg', 'feelslike_avg', 'rain_flag', 'snow_flag', 'cloudy_flag',\n",
    "    'avg_fare_by_zone_hour', 'zone_hour_demand_index'\n",
    "]\n",
    "\n",
    "X = taxi_weather_df[selected_features]\n",
    "\n",
    "# Train/test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, stratify=y, random_state=42\n",
    ")\n",
    "\n",
    "# Preprocessing for categorical columns\n",
    "categorical_features = ['PULocationID', 'Borough']\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_features)\n",
    "    ],\n",
    "    remainder='passthrough'\n",
    ")\n",
    "\n",
    "# Build XGBoost classification pipeline\n",
    "clf_model = Pipeline(steps=[\n",
    "    ('preprocessing', preprocessor),\n",
    "    ('classifier', XGBClassifier(\n",
    "        n_estimators=100,\n",
    "        max_depth=6,\n",
    "        learning_rate=0.1,\n",
    "        n_jobs=-1,\n",
    "        use_label_encoder=False,\n",
    "        eval_metric='mlogloss',\n",
    "        random_state=42\n",
    "    ))\n",
    "])\n",
    "\n",
    "# Train model\n",
    "clf_model.fit(X_train, y_train)\n",
    "\n",
    "# Predict and decode results\n",
    "y_pred = clf_model.predict(X_test)\n",
    "y_pred_labels = label_encoder.inverse_transform(y_pred)\n",
    "y_test_labels = label_encoder.inverse_transform(y_test)\n",
    "\n",
    "# Evaluate ---\n",
    "print(\"Classification Report:\\n\")\n",
    "print(classification_report(y_test_labels, y_pred_labels))\n",
    "\n",
    "print(\"Confusion Matrix:\\n\")\n",
    "print(confusion_matrix(y_test_labels, y_pred_labels))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cdd27b01",
   "metadata": {
    "papermill": {
     "duration": 0.036031,
     "end_time": "2025-06-16T10:25:04.402058",
     "exception": false,
     "start_time": "2025-06-16T10:25:04.366027",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 9. Model Comparison & Conclusion\n",
    "\n",
    "In this notebook, we explored two predictive approaches using NYC taxi data for January 2025:\n",
    "\n",
    "- A regression model to estimate the exact `total_amount` of a ride.\n",
    "- A classification model to predict which fare range a ride belongs to (`low`, `medium`, or `high`).\n",
    "\n",
    "### Key Observations\n",
    "\n",
    "- The regression model using Random Forest and XGBoost achieved a moderate R² score. While it was able to capture some variation in fare, a significant portion remained unexplained. This is likely due to the absence of critical variables such as route-specific information, traffic conditions, or dynamic pricing details.\n",
    "\n",
    "- The classification model performed better in distinguishing between `medium` and `high` fare classes, but showed limitations in identifying `low` fares accurately. This may be attributed to class imbalance or overlapping patterns in the feature space.\n",
    "\n",
    "### Final Takeaways\n",
    "\n",
    "- Regression is more appropriate when a precise fare prediction is needed, such as for billing, forecasting, or revenue estimation.\n",
    "\n",
    "- Classification is useful when categorization into ranges is sufficient for decision-making, such as for pricing tiers, targeted promotions, or operational optimization.\n",
    "\n",
    "Both approaches offer valuable insights depending on the application context. Future improvements could include:\n",
    "- Incorporating route and duration data,\n",
    "- Adding richer temporal or location-based features,\n",
    "- Performing advanced model tuning or ensembling.\n",
    "\n",
    "This analysis demonstrates how both regression and classification techniques can be applied to a real-world dataset and how each brings unique strengths to a fare prediction task.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f7d9e61",
   "metadata": {
    "papermill": {
     "duration": 0.036,
     "end_time": "2025-06-16T10:25:04.473650",
     "exception": false,
     "start_time": "2025-06-16T10:25:04.437650",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5280212,
     "sourceId": 8783699,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7389641,
     "sourceId": 11770481,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7650444,
     "sourceId": 12147009,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 159.092059,
   "end_time": "2025-06-16T10:25:05.934722",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-06-16T10:22:26.842663",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
